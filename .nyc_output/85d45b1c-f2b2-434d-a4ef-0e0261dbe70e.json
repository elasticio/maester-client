{"/home/illya/work/maester-client/spec/helpers.ts":{"path":"/home/illya/work/maester-client/spec/helpers.ts","statementMap":{"0":{"start":{"line":2,"column":19},"end":{"line":8,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":42}},"2":{"start":{"line":3,"column":31},"end":{"line":3,"column":42}},"3":{"start":{"line":4,"column":17},"end":{"line":4,"column":19}},"4":{"start":{"line":5,"column":4},"end":{"line":5,"column":99}},"5":{"start":{"line":5,"column":21},"end":{"line":5,"column":99}},"6":{"start":{"line":5,"column":40},"end":{"line":5,"column":99}},"7":{"start":{"line":5,"column":80},"end":{"line":5,"column":99}},"8":{"start":{"line":6,"column":4},"end":{"line":6,"column":28}},"9":{"start":{"line":7,"column":4},"end":{"line":7,"column":18}},"10":{"start":{"line":9,"column":0},"end":{"line":9,"column":62}},"11":{"start":{"line":10,"column":17},"end":{"line":10,"column":34}},"12":{"start":{"line":11,"column":15},"end":{"line":11,"column":46}},"13":{"start":{"line":12,"column":13},"end":{"line":12,"column":42}},"14":{"start":{"line":13,"column":32},"end":{"line":13,"column":52}},"15":{"start":{"line":14,"column":26},"end":{"line":14,"column":44}},"16":{"start":{"line":15,"column":18},"end":{"line":15,"column":31}},"17":{"start":{"line":16,"column":0},"end":{"line":21,"column":2}},"18":{"start":{"line":16,"column":43},"end":{"line":21,"column":1}},"19":{"start":{"line":17,"column":19},"end":{"line":17,"column":42}},"20":{"start":{"line":18,"column":4},"end":{"line":18,"column":46}},"21":{"start":{"line":19,"column":4},"end":{"line":19,"column":22}},"22":{"start":{"line":20,"column":4},"end":{"line":20,"column":18}},"23":{"start":{"line":22,"column":0},"end":{"line":25,"column":2}},"24":{"start":{"line":23,"column":22},"end":{"line":23,"column":98}},"25":{"start":{"line":24,"column":4},"end":{"line":24,"column":74}},"26":{"start":{"line":26,"column":0},"end":{"line":29,"column":2}},"27":{"start":{"line":27,"column":22},"end":{"line":27,"column":98}},"28":{"start":{"line":28,"column":4},"end":{"line":28,"column":76}},"29":{"start":{"line":30,"column":0},"end":{"line":30,"column":38}},"30":{"start":{"line":30,"column":20},"end":{"line":30,"column":37}},"31":{"start":{"line":31,"column":0},"end":{"line":31,"column":42}},"32":{"start":{"line":31,"column":22},"end":{"line":31,"column":41}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":50},"end":{"line":2,"column":51}},"loc":{"start":{"line":2,"column":65},"end":{"line":8,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":16,"column":25},"end":{"line":16,"column":26}},"loc":{"start":{"line":16,"column":43},"end":{"line":21,"column":1}},"line":16},"2":{"name":"(anonymous_2)","decl":{"start":{"line":16,"column":43},"end":{"line":16,"column":44}},"loc":{"start":{"line":16,"column":49},"end":{"line":21,"column":1}},"line":16},"3":{"name":"(anonymous_3)","decl":{"start":{"line":22,"column":24},"end":{"line":22,"column":25}},"loc":{"start":{"line":22,"column":30},"end":{"line":25,"column":1}},"line":22},"4":{"name":"(anonymous_4)","decl":{"start":{"line":26,"column":24},"end":{"line":26,"column":25}},"loc":{"start":{"line":26,"column":30},"end":{"line":29,"column":1}},"line":26},"5":{"name":"(anonymous_5)","decl":{"start":{"line":30,"column":14},"end":{"line":30,"column":15}},"loc":{"start":{"line":30,"column":20},"end":{"line":30,"column":37}},"line":30},"6":{"name":"(anonymous_6)","decl":{"start":{"line":31,"column":16},"end":{"line":31,"column":17}},"loc":{"start":{"line":31,"column":22},"end":{"line":31,"column":41}},"line":31}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":19},"end":{"line":8,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":20},"end":{"line":2,"column":24}},{"start":{"line":2,"column":28},"end":{"line":2,"column":45}},{"start":{"line":2,"column":50},"end":{"line":8,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":42}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":42}},{"start":{"line":3,"column":4},"end":{"line":3,"column":42}}],"line":3},"2":{"loc":{"start":{"line":3,"column":8},"end":{"line":3,"column":29}},"type":"binary-expr","locations":[{"start":{"line":3,"column":8},"end":{"line":3,"column":11}},{"start":{"line":3,"column":15},"end":{"line":3,"column":29}}],"line":3},"3":{"loc":{"start":{"line":5,"column":4},"end":{"line":5,"column":99}},"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":5,"column":99}},{"start":{"line":5,"column":4},"end":{"line":5,"column":99}}],"line":5},"4":{"loc":{"start":{"line":5,"column":40},"end":{"line":5,"column":99}},"type":"if","locations":[{"start":{"line":5,"column":40},"end":{"line":5,"column":99}},{"start":{"line":5,"column":40},"end":{"line":5,"column":99}}],"line":5}},"s":{"0":1,"1":2,"2":0,"3":2,"4":2,"5":2,"6":90,"7":90,"8":2,"9":2,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":6,"19":6,"20":6,"21":6,"22":6,"23":1,"24":13,"25":13,"26":1,"27":3,"28":3,"29":1,"30":13,"31":1,"32":3},"f":{"0":2,"1":6,"2":6,"3":13,"4":3,"5":13,"6":3},"b":{"0":[1,1,1],"1":[0,2],"2":[2,2],"3":[2,0],"4":[90,0]},"inputSourceMap":{"version":3,"file":"/home/illya/work/maester-client/spec/helpers.ts","sources":["/home/illya/work/maester-client/spec/helpers.ts"],"names":[],"mappings":";;;;;;;;;AAAA,mCAA0C;AAC1C,+CAAiC;AACjC,2CAA6B;AAE7B,MAAM,uBAAuB,GAAG,oBAAoB,CAAC;AACrD,MAAM,iBAAiB,GAAG,kBAAkB,CAAC;AAC7C,MAAM,SAAS,GAAG,aAAa,CAAC;AAEnB,QAAA,cAAc,GAAG,CAAC,YAAiB,EAAE,EAAE,CAAC,GAAG,EAAE;IACxD,MAAM,MAAM,GAAG,IAAI,iBAAQ,EAAE,CAAC;IAC9B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,CAAC;IAC1C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAClB,OAAO,MAAM,CAAC;AAChB,CAAC,CAAC;AAEW,QAAA,aAAa,GAAG,GAAW,EAAE;IACxC,MAAM,SAAS,GAAG,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,uBAAuB,EAAE,MAAM,CAAC,CAAC,MAAM,EAAE,CAAC;IAC/F,OAAO,MAAM,CAAC,cAAc,CAAC,SAAS,EAAE,SAAS,EAAE,iBAAiB,CAAC,CAAC;AACxE,CAAC,CAAC;AAEW,QAAA,aAAa,GAAG,GAAW,EAAE;IACxC,MAAM,SAAS,GAAG,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,uBAAuB,EAAE,MAAM,CAAC,CAAC,MAAM,EAAE,CAAC;IAC/F,OAAO,MAAM,CAAC,gBAAgB,CAAC,SAAS,EAAE,SAAS,EAAE,iBAAiB,CAAC,CAAC;AAC1E,CAAC,CAAC;AAEW,QAAA,GAAG,GAAG,GAAW,EAAE,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC;AAEtC,QAAA,KAAK,GAAG,GAAW,EAAE,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC","sourcesContent":["import { Readable, Duplex } from 'stream';\nimport * as crypto from 'crypto';\nimport * as zlib from 'zlib';\n\nconst MESSAGE_CRYPTO_PASSWORD = 'testCryptoPassword';\nconst MESSAGE_CRYPTO_IV = 'iv=any16_symbols';\nconst ALGORITHM = 'aes-256-cbc';\n\nexport const streamResponse = (responseData: any) => () => {\n  const stream = new Readable();\n  stream.push(JSON.stringify(responseData));\n  stream.push(null);\n  return stream;\n};\n\nexport const encryptStream = (): Duplex => {\n  const encodeKey = crypto.createHash('sha256').update(MESSAGE_CRYPTO_PASSWORD, 'utf8').digest();\n  return crypto.createCipheriv(ALGORITHM, encodeKey, MESSAGE_CRYPTO_IV);\n};\n\nexport const decryptStream = (): Duplex => {\n  const decodeKey = crypto.createHash('sha256').update(MESSAGE_CRYPTO_PASSWORD, 'utf8').digest();\n  return crypto.createDecipheriv(ALGORITHM, decodeKey, MESSAGE_CRYPTO_IV);\n};\n\nexport const zip = (): Duplex => zlib.createGzip();\n\nexport const unzip = (): Duplex => zlib.createGunzip();\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"aca808d71e736f9d28545de8ea9bb45cae40f658","contentHash":"55d77e136bd2bf902ea3cf7b4ee75db737b23535d2c1767bcd3252dc0ca920c8"},"/home/illya/work/maester-client/spec/ObjectStorage.spec.ts":{"path":"/home/illya/work/maester-client/spec/ObjectStorage.spec.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":7,"column":15},"end":{"line":7,"column":47}},"4":{"start":{"line":8,"column":16},"end":{"line":8,"column":49}},"5":{"start":{"line":9,"column":15},"end":{"line":9,"column":30}},"6":{"start":{"line":10,"column":16},"end":{"line":10,"column":32}},"7":{"start":{"line":11,"column":24},"end":{"line":11,"column":72}},"8":{"start":{"line":12,"column":17},"end":{"line":12,"column":58}},"9":{"start":{"line":13,"column":18},"end":{"line":13,"column":38}},"10":{"start":{"line":14,"column":0},"end":{"line":303,"column":3}},"11":{"start":{"line":15,"column":19},"end":{"line":18,"column":5}},"12":{"start":{"line":19,"column":21},"end":{"line":19,"column":37}},"13":{"start":{"line":20,"column":25},"end":{"line":27,"column":5}},"14":{"start":{"line":29,"column":27},"end":{"line":29,"column":201}},"15":{"start":{"line":31,"column":4},"end":{"line":33,"column":7}},"16":{"start":{"line":32,"column":8},"end":{"line":32,"column":48}},"17":{"start":{"line":34,"column":4},"end":{"line":36,"column":7}},"18":{"start":{"line":35,"column":8},"end":{"line":35,"column":24}},"19":{"start":{"line":37,"column":4},"end":{"line":142,"column":7}},"20":{"start":{"line":38,"column":8},"end":{"line":49,"column":11}},"21":{"start":{"line":39,"column":12},"end":{"line":48,"column":15}},"22":{"start":{"line":40,"column":38},"end":{"line":40,"column":115}},"23":{"start":{"line":41,"column":43},"end":{"line":45,"column":35}},"24":{"start":{"line":46,"column":16},"end":{"line":46,"column":67}},"25":{"start":{"line":47,"column":16},"end":{"line":47,"column":70}},"26":{"start":{"line":50,"column":8},"end":{"line":141,"column":11}},"27":{"start":{"line":51,"column":12},"end":{"line":74,"column":15}},"28":{"start":{"line":52,"column":28},"end":{"line":52,"column":64}},"29":{"start":{"line":53,"column":38},"end":{"line":53,"column":73}},"30":{"start":{"line":54,"column":43},"end":{"line":62,"column":58}},"31":{"start":{"line":64,"column":16},"end":{"line":69,"column":17}},"32":{"start":{"line":65,"column":20},"end":{"line":65,"column":53}},"33":{"start":{"line":68,"column":20},"end":{"line":68,"column":28}},"34":{"start":{"line":70,"column":16},"end":{"line":70,"column":70}},"35":{"start":{"line":71,"column":16},"end":{"line":71,"column":65}},"36":{"start":{"line":72,"column":16},"end":{"line":72,"column":83}},"37":{"start":{"line":73,"column":16},"end":{"line":73,"column":60}},"38":{"start":{"line":75,"column":12},"end":{"line":87,"column":15}},"39":{"start":{"line":76,"column":38},"end":{"line":76,"column":73}},"40":{"start":{"line":77,"column":43},"end":{"line":83,"column":71}},"41":{"start":{"line":84,"column":33},"end":{"line":84,"column":65}},"42":{"start":{"line":85,"column":16},"end":{"line":85,"column":70}},"43":{"start":{"line":86,"column":16},"end":{"line":86,"column":73}},"44":{"start":{"line":88,"column":12},"end":{"line":108,"column":15}},"45":{"start":{"line":89,"column":38},"end":{"line":89,"column":73}},"46":{"start":{"line":90,"column":43},"end":{"line":98,"column":61}},"47":{"start":{"line":100,"column":16},"end":{"line":105,"column":17}},"48":{"start":{"line":101,"column":20},"end":{"line":101,"column":65}},"49":{"start":{"line":104,"column":20},"end":{"line":104,"column":28}},"50":{"start":{"line":106,"column":16},"end":{"line":106,"column":70}},"51":{"start":{"line":107,"column":16},"end":{"line":107,"column":68}},"52":{"start":{"line":109,"column":12},"end":{"line":129,"column":15}},"53":{"start":{"line":110,"column":38},"end":{"line":110,"column":73}},"54":{"start":{"line":111,"column":43},"end":{"line":119,"column":31}},"55":{"start":{"line":121,"column":16},"end":{"line":126,"column":17}},"56":{"start":{"line":122,"column":20},"end":{"line":122,"column":65}},"57":{"start":{"line":125,"column":20},"end":{"line":125,"column":28}},"58":{"start":{"line":127,"column":16},"end":{"line":127,"column":70}},"59":{"start":{"line":128,"column":16},"end":{"line":128,"column":64}},"60":{"start":{"line":130,"column":12},"end":{"line":140,"column":15}},"61":{"start":{"line":131,"column":38},"end":{"line":131,"column":73}},"62":{"start":{"line":132,"column":43},"end":{"line":136,"column":31}},"63":{"start":{"line":137,"column":33},"end":{"line":137,"column":77}},"64":{"start":{"line":138,"column":16},"end":{"line":138,"column":70}},"65":{"start":{"line":139,"column":16},"end":{"line":139,"column":74}},"66":{"start":{"line":143,"column":4},"end":{"line":302,"column":7}},"67":{"start":{"line":144,"column":8},"end":{"line":301,"column":11}},"68":{"start":{"line":145,"column":12},"end":{"line":170,"column":15}},"69":{"start":{"line":146,"column":53},"end":{"line":146,"column":88}},"70":{"start":{"line":147,"column":16},"end":{"line":147,"column":99}},"71":{"start":{"line":148,"column":16},"end":{"line":148,"column":81}},"72":{"start":{"line":149,"column":28},"end":{"line":149,"column":64}},"73":{"start":{"line":150,"column":58},"end":{"line":158,"column":58}},"74":{"start":{"line":160,"column":16},"end":{"line":165,"column":17}},"75":{"start":{"line":161,"column":20},"end":{"line":161,"column":68}},"76":{"start":{"line":164,"column":20},"end":{"line":164,"column":28}},"77":{"start":{"line":166,"column":16},"end":{"line":166,"column":85}},"78":{"start":{"line":167,"column":16},"end":{"line":167,"column":65}},"79":{"start":{"line":168,"column":16},"end":{"line":168,"column":83}},"80":{"start":{"line":169,"column":16},"end":{"line":169,"column":60}},"81":{"start":{"line":171,"column":12},"end":{"line":188,"column":15}},"82":{"start":{"line":172,"column":53},"end":{"line":172,"column":88}},"83":{"start":{"line":173,"column":16},"end":{"line":173,"column":99}},"84":{"start":{"line":174,"column":16},"end":{"line":174,"column":81}},"85":{"start":{"line":175,"column":58},"end":{"line":184,"column":18}},"86":{"start":{"line":182,"column":35},"end":{"line":182,"column":75}},"87":{"start":{"line":183,"column":20},"end":{"line":183,"column":88}},"88":{"start":{"line":185,"column":33},"end":{"line":185,"column":80}},"89":{"start":{"line":186,"column":16},"end":{"line":186,"column":85}},"90":{"start":{"line":187,"column":16},"end":{"line":187,"column":73}},"91":{"start":{"line":189,"column":12},"end":{"line":211,"column":15}},"92":{"start":{"line":190,"column":53},"end":{"line":190,"column":88}},"93":{"start":{"line":191,"column":16},"end":{"line":191,"column":99}},"94":{"start":{"line":192,"column":16},"end":{"line":192,"column":81}},"95":{"start":{"line":193,"column":58},"end":{"line":201,"column":61}},"96":{"start":{"line":203,"column":16},"end":{"line":208,"column":17}},"97":{"start":{"line":204,"column":20},"end":{"line":204,"column":80}},"98":{"start":{"line":207,"column":20},"end":{"line":207,"column":28}},"99":{"start":{"line":209,"column":16},"end":{"line":209,"column":85}},"100":{"start":{"line":210,"column":16},"end":{"line":210,"column":68}},"101":{"start":{"line":212,"column":12},"end":{"line":234,"column":15}},"102":{"start":{"line":213,"column":53},"end":{"line":213,"column":88}},"103":{"start":{"line":214,"column":16},"end":{"line":214,"column":99}},"104":{"start":{"line":215,"column":16},"end":{"line":215,"column":81}},"105":{"start":{"line":216,"column":58},"end":{"line":224,"column":31}},"106":{"start":{"line":226,"column":16},"end":{"line":231,"column":17}},"107":{"start":{"line":227,"column":20},"end":{"line":227,"column":80}},"108":{"start":{"line":230,"column":20},"end":{"line":230,"column":28}},"109":{"start":{"line":232,"column":16},"end":{"line":232,"column":85}},"110":{"start":{"line":233,"column":16},"end":{"line":233,"column":64}},"111":{"start":{"line":235,"column":12},"end":{"line":247,"column":15}},"112":{"start":{"line":236,"column":53},"end":{"line":236,"column":88}},"113":{"start":{"line":237,"column":16},"end":{"line":237,"column":99}},"114":{"start":{"line":238,"column":16},"end":{"line":238,"column":81}},"115":{"start":{"line":239,"column":58},"end":{"line":243,"column":50}},"116":{"start":{"line":244,"column":33},"end":{"line":244,"column":92}},"117":{"start":{"line":245,"column":16},"end":{"line":245,"column":85}},"118":{"start":{"line":246,"column":16},"end":{"line":246,"column":66}},"119":{"start":{"line":248,"column":12},"end":{"line":264,"column":15}},"120":{"start":{"line":249,"column":53},"end":{"line":249,"column":88}},"121":{"start":{"line":250,"column":16},"end":{"line":250,"column":99}},"122":{"start":{"line":251,"column":16},"end":{"line":251,"column":81}},"123":{"start":{"line":252,"column":58},"end":{"line":258,"column":50}},"124":{"start":{"line":259,"column":34},"end":{"line":259,"column":93}},"125":{"start":{"line":260,"column":34},"end":{"line":260,"column":93}},"126":{"start":{"line":261,"column":16},"end":{"line":261,"column":85}},"127":{"start":{"line":262,"column":16},"end":{"line":262,"column":67}},"128":{"start":{"line":263,"column":16},"end":{"line":263,"column":67}},"129":{"start":{"line":265,"column":12},"end":{"line":287,"column":15}},"130":{"start":{"line":266,"column":53},"end":{"line":266,"column":88}},"131":{"start":{"line":267,"column":16},"end":{"line":267,"column":99}},"132":{"start":{"line":268,"column":16},"end":{"line":268,"column":81}},"133":{"start":{"line":269,"column":58},"end":{"line":281,"column":18}},"134":{"start":{"line":274,"column":35},"end":{"line":274,"column":75}},"135":{"start":{"line":275,"column":20},"end":{"line":275,"column":88}},"136":{"start":{"line":279,"column":35},"end":{"line":279,"column":75}},"137":{"start":{"line":280,"column":20},"end":{"line":280,"column":88}},"138":{"start":{"line":282,"column":39},"end":{"line":282,"column":86}},"139":{"start":{"line":283,"column":40},"end":{"line":283,"column":87}},"140":{"start":{"line":284,"column":16},"end":{"line":284,"column":85}},"141":{"start":{"line":285,"column":16},"end":{"line":285,"column":79}},"142":{"start":{"line":286,"column":16},"end":{"line":286,"column":80}},"143":{"start":{"line":288,"column":12},"end":{"line":300,"column":15}},"144":{"start":{"line":289,"column":53},"end":{"line":289,"column":88}},"145":{"start":{"line":290,"column":16},"end":{"line":290,"column":99}},"146":{"start":{"line":291,"column":16},"end":{"line":291,"column":81}},"147":{"start":{"line":292,"column":58},"end":{"line":296,"column":31}},"148":{"start":{"line":297,"column":33},"end":{"line":297,"column":92}},"149":{"start":{"line":298,"column":16},"end":{"line":298,"column":85}},"150":{"start":{"line":299,"column":16},"end":{"line":299,"column":74}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":14,"column":35},"end":{"line":14,"column":36}},"loc":{"start":{"line":14,"column":41},"end":{"line":303,"column":1}},"line":14},"2":{"name":"(anonymous_2)","decl":{"start":{"line":31,"column":23},"end":{"line":31,"column":24}},"loc":{"start":{"line":31,"column":35},"end":{"line":33,"column":5}},"line":31},"3":{"name":"(anonymous_3)","decl":{"start":{"line":34,"column":22},"end":{"line":34,"column":23}},"loc":{"start":{"line":34,"column":28},"end":{"line":36,"column":5}},"line":34},"4":{"name":"(anonymous_4)","decl":{"start":{"line":37,"column":30},"end":{"line":37,"column":31}},"loc":{"start":{"line":37,"column":36},"end":{"line":142,"column":5}},"line":37},"5":{"name":"(anonymous_5)","decl":{"start":{"line":38,"column":38},"end":{"line":38,"column":39}},"loc":{"start":{"line":38,"column":44},"end":{"line":49,"column":9}},"line":38},"6":{"name":"(anonymous_6)","decl":{"start":{"line":39,"column":48},"end":{"line":39,"column":49}},"loc":{"start":{"line":39,"column":60},"end":{"line":48,"column":13}},"line":39},"7":{"name":"(anonymous_7)","decl":{"start":{"line":50,"column":40},"end":{"line":50,"column":41}},"loc":{"start":{"line":50,"column":46},"end":{"line":141,"column":9}},"line":50},"8":{"name":"(anonymous_8)","decl":{"start":{"line":51,"column":58},"end":{"line":51,"column":59}},"loc":{"start":{"line":51,"column":70},"end":{"line":74,"column":13}},"line":51},"9":{"name":"(anonymous_9)","decl":{"start":{"line":75,"column":61},"end":{"line":75,"column":62}},"loc":{"start":{"line":75,"column":73},"end":{"line":87,"column":13}},"line":75},"10":{"name":"(anonymous_10)","decl":{"start":{"line":88,"column":81},"end":{"line":88,"column":82}},"loc":{"start":{"line":88,"column":93},"end":{"line":108,"column":13}},"line":88},"11":{"name":"(anonymous_11)","decl":{"start":{"line":109,"column":75},"end":{"line":109,"column":76}},"loc":{"start":{"line":109,"column":87},"end":{"line":129,"column":13}},"line":109},"12":{"name":"(anonymous_12)","decl":{"start":{"line":130,"column":51},"end":{"line":130,"column":52}},"loc":{"start":{"line":130,"column":63},"end":{"line":140,"column":13}},"line":130},"13":{"name":"(anonymous_13)","decl":{"start":{"line":143,"column":68},"end":{"line":143,"column":69}},"loc":{"start":{"line":143,"column":74},"end":{"line":302,"column":5}},"line":143},"14":{"name":"(anonymous_14)","decl":{"start":{"line":144,"column":40},"end":{"line":144,"column":41}},"loc":{"start":{"line":144,"column":46},"end":{"line":301,"column":9}},"line":144},"15":{"name":"(anonymous_15)","decl":{"start":{"line":145,"column":58},"end":{"line":145,"column":59}},"loc":{"start":{"line":145,"column":70},"end":{"line":170,"column":13}},"line":145},"16":{"name":"(anonymous_16)","decl":{"start":{"line":171,"column":61},"end":{"line":171,"column":62}},"loc":{"start":{"line":171,"column":73},"end":{"line":188,"column":13}},"line":171},"17":{"name":"(anonymous_17)","decl":{"start":{"line":181,"column":32},"end":{"line":181,"column":33}},"loc":{"start":{"line":181,"column":38},"end":{"line":184,"column":17}},"line":181},"18":{"name":"(anonymous_18)","decl":{"start":{"line":189,"column":81},"end":{"line":189,"column":82}},"loc":{"start":{"line":189,"column":93},"end":{"line":211,"column":13}},"line":189},"19":{"name":"(anonymous_19)","decl":{"start":{"line":212,"column":75},"end":{"line":212,"column":76}},"loc":{"start":{"line":212,"column":87},"end":{"line":234,"column":13}},"line":212},"20":{"name":"(anonymous_20)","decl":{"start":{"line":235,"column":51},"end":{"line":235,"column":52}},"loc":{"start":{"line":235,"column":63},"end":{"line":247,"column":13}},"line":235},"21":{"name":"(anonymous_21)","decl":{"start":{"line":248,"column":60},"end":{"line":248,"column":61}},"loc":{"start":{"line":248,"column":72},"end":{"line":264,"column":13}},"line":248},"22":{"name":"(anonymous_22)","decl":{"start":{"line":265,"column":60},"end":{"line":265,"column":61}},"loc":{"start":{"line":265,"column":72},"end":{"line":287,"column":13}},"line":265},"23":{"name":"(anonymous_23)","decl":{"start":{"line":273,"column":32},"end":{"line":273,"column":33}},"loc":{"start":{"line":273,"column":38},"end":{"line":276,"column":17}},"line":273},"24":{"name":"(anonymous_24)","decl":{"start":{"line":278,"column":32},"end":{"line":278,"column":33}},"loc":{"start":{"line":278,"column":38},"end":{"line":281,"column":17}},"line":278},"25":{"name":"(anonymous_25)","decl":{"start":{"line":288,"column":53},"end":{"line":288,"column":54}},"loc":{"start":{"line":288,"column":65},"end":{"line":300,"column":13}},"line":288}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":4,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":14,"17":1,"18":14,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"59":1,"60":1,"61":1,"62":1,"63":1,"64":1,"65":1,"66":1,"67":1,"68":1,"69":1,"70":1,"71":1,"72":1,"73":1,"74":1,"75":1,"76":1,"77":1,"78":1,"79":1,"80":1,"81":1,"82":1,"83":1,"84":1,"85":1,"86":1,"87":1,"88":1,"89":1,"90":1,"91":1,"92":1,"93":1,"94":1,"95":1,"96":1,"97":1,"98":1,"99":1,"100":1,"101":1,"102":1,"103":1,"104":1,"105":1,"106":1,"107":1,"108":1,"109":1,"110":1,"111":1,"112":1,"113":1,"114":1,"115":1,"116":1,"117":1,"118":1,"119":1,"120":1,"121":1,"122":1,"123":1,"124":1,"125":1,"126":1,"127":1,"128":1,"129":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"136":1,"137":1,"138":1,"139":1,"140":1,"141":1,"142":1,"143":1,"144":1,"145":1,"146":1,"147":1,"148":1,"149":1,"150":1},"f":{"0":4,"1":1,"2":14,"3":14,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1},"b":{"0":[1,1,1],"1":[2,2],"2":[4,4]},"inputSourceMap":{"version":3,"file":"/home/illya/work/maester-client/spec/ObjectStorage.spec.ts","sources":["/home/illya/work/maester-client/spec/ObjectStorage.spec.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-expressions */\nimport nock from 'nock';\nimport sinonjs, { SinonSandbox } from 'sinon';\nimport { expect } from 'chai';\nimport {\n  describe, beforeEach, afterEach, it,\n} from 'mocha';\nimport ObjectStorage from '../src/ObjectStorage';\nimport logging from '../src/logger';\nimport {\n  streamResponse, encryptStream, decryptStream, zip, unzip,\n} from './helpers';\n\ndescribe('Object Storage', () => {\n  const config = {\n    uri: 'https://ma.es.ter',\n    jwtSecret: 'jwt',\n  };\n\n  const postData = { test: 'test' };\n\n  const responseData = {\n    contentLength: 'meta.contentLength',\n    contentType: 'meta.contentType',\n    createdAt: 'meta.createdAt',\n    md5: 'meta.md5Hash',\n    objectId: 'obj.id',\n    metadata: 'meta.userMetadata',\n  };\n  // eslint-disable-next-line max-len\n  const responseString = '{\"contentLength\":\"meta.contentLength\",\"contentType\":\"meta.contentType\",\"createdAt\":\"meta.createdAt\",\"md5\":\"meta.md5Hash\",\"objectId\":\"obj.id\",\"metadata\":\"meta.userMetadata\"}';\n\n  let sinon: SinonSandbox;\n  beforeEach(async () => {\n    sinon = sinonjs.createSandbox();\n  });\n  afterEach(() => {\n    sinon.restore();\n  });\n\n  describe('basic', () => {\n    describe('data mode', () => {\n      it('should getAllByParams', async () => {\n        const objectStorage = new ObjectStorage({ uri: config.uri, jwtSecret: config.jwtSecret });\n\n        const objectStorageCalls = nock(config.uri)\n        // @ts-ignore: Nock .d.ts are outdated.\n          .matchHeader('authorization', `Bearer ${config.jwtSecret}`)\n          .get('/objects?foo=bar')\n          .reply(200, {});\n\n        await objectStorage.getAllByParams({ foo: 'bar' });\n\n        expect(objectStorageCalls.isDone()).to.be.true;\n      });\n    });\n\n    describe('stream mode', () => {\n      it('should fail after 3 get retries', async () => {\n        const log = sinon.stub(logging, 'warn');\n        const objectStorage = new ObjectStorage(config);\n\n        const objectStorageCalls = nock(config.uri)\n        // @ts-ignore: Nock .d.ts are outdated.\n          .matchHeader('authorization', `Bearer ${config.jwtSecret}`)\n          .get('/objects/1')\n          .replyWithError({ code: 'ETIMEDOUT' })\n          .get('/objects/1')\n          .reply(404)\n          .get('/objects/1')\n          .replyWithError({ code: 'ENOTFOUND' });\n\n        let err;\n        try {\n          await objectStorage.getById('1');\n        } catch (e) {\n          err = e;\n        }\n\n        expect(objectStorageCalls.isDone()).to.be.true;\n        expect(err.code).to.be.equal('ENOTFOUND');\n        expect(log.getCall(1).args[1].toString()).to.include('404');\n        expect(log.callCount).to.be.equal(2);\n      });\n\n      it('should retry get request on errors', async () => {\n        const objectStorage = new ObjectStorage(config);\n\n        const objectStorageCalls = nock(config.uri)\n        // @ts-ignore: Nock .d.ts are outdated.\n          .matchHeader('authorization', `Bearer ${config.jwtSecret}`)\n          .get('/objects/1')\n          .reply(500)\n          .get('/objects/1')\n          .reply(200, streamResponse(responseData));\n\n        const response = await objectStorage.getById('1');\n\n        expect(objectStorageCalls.isDone()).to.be.true;\n        expect(response).to.be.deep.equal(responseString);\n      });\n\n      it('should throw an error on post request connection error', async () => {\n        const objectStorage = new ObjectStorage(config);\n\n        const objectStorageCalls = nock(config.uri)\n        // @ts-ignore: Nock .d.ts are outdated.\n          .matchHeader('authorization', `Bearer ${config.jwtSecret}`)\n          .post('/objects')\n          .replyWithError({ code: 'ECONNREFUSED' })\n          .post('/objects')\n          .replyWithError({ code: 'ECONNREFUSED' })\n          .post('/objects')\n          .replyWithError({ code: 'ECONNREFUSED' });\n\n        let err;\n        try {\n          await objectStorage.postObject(postData, {});\n        } catch (e) {\n          err = e;\n        }\n\n        expect(objectStorageCalls.isDone()).to.be.true;\n        expect(err.code).to.be.equal('ECONNREFUSED');\n      });\n\n      it('should throw an error on post request http error', async () => {\n        const objectStorage = new ObjectStorage(config);\n\n        const objectStorageCalls = nock(config.uri)\n        // @ts-ignore: Nock .d.ts are outdated.\n          .matchHeader('authorization', `Bearer ${config.jwtSecret}`)\n          .post('/objects')\n          .reply(409)\n          .post('/objects')\n          .reply(409)\n          .post('/objects')\n          .reply(409);\n\n        let err;\n        try {\n          await objectStorage.postObject(postData, {});\n        } catch (e) {\n          err = e;\n        }\n        expect(objectStorageCalls.isDone()).to.be.true;\n        expect(err.toString()).to.include('409');\n      });\n\n      it('should post successfully', async () => {\n        const objectStorage = new ObjectStorage(config);\n\n        const objectStorageCalls = nock(config.uri)\n        // @ts-ignore: Nock .d.ts are outdated.\n          .matchHeader('authorization', `Bearer ${config.jwtSecret}`)\n          .post('/objects')\n          .reply(200);\n\n        const response: any = await objectStorage.postObject(postData, {});\n\n        expect(objectStorageCalls.isDone()).to.be.true;\n        expect(response.objectId).to.match(/^[0-9a-z-]+$/);\n      });\n    });\n  });\n\n  describe('middlewares + zip/unzip and encrypt/decrypt', () => {\n    describe('stream mode', () => {\n      it('should fail after 3 get retries', async () => {\n        const objectStorageWithMiddlewares = new ObjectStorage(config);\n        objectStorageWithMiddlewares.use(encryptStream, decryptStream);\n        objectStorageWithMiddlewares.use(zip, unzip);\n        const log = sinon.stub(logging, 'warn');\n        const objectStorageWithMiddlewaresCalls = nock(config.uri)\n        // @ts-ignore: Nock .d.ts are outdated.\n          .matchHeader('authorization', `Bearer ${config.jwtSecret}`)\n          .get('/objects/1')\n          .replyWithError({ code: 'ETIMEDOUT' })\n          .get('/objects/1')\n          .reply(404)\n          .get('/objects/1')\n          .replyWithError({ code: 'ENOTFOUND' });\n\n        let err;\n        try {\n          await objectStorageWithMiddlewares.getById('1');\n        } catch (e) {\n          err = e;\n        }\n\n        expect(objectStorageWithMiddlewaresCalls.isDone()).to.be.true;\n        expect(err.code).to.be.equal('ENOTFOUND');\n        expect(log.getCall(1).args[1].toString()).to.include('404');\n        expect(log.callCount).to.be.equal(2);\n      });\n\n      it('should retry get request on errors', async () => {\n        const objectStorageWithMiddlewares = new ObjectStorage(config);\n        objectStorageWithMiddlewares.use(encryptStream, decryptStream);\n        objectStorageWithMiddlewares.use(zip, unzip);\n        const objectStorageWithMiddlewaresCalls = nock(config.uri)\n        // @ts-ignore: Nock .d.ts are outdated.\n          .matchHeader('authorization', `Bearer ${config.jwtSecret}`)\n          .get('/objects/1')\n          .reply(500)\n          .get('/objects/1')\n          .reply(200, () => {\n            const stream = streamResponse(responseData)();\n            return stream.pipe(encryptStream()).pipe(zip());\n          });\n\n        const response = await objectStorageWithMiddlewares.getById('1');\n\n        expect(objectStorageWithMiddlewaresCalls.isDone()).to.be.true;\n        expect(response).to.be.deep.equal(responseString);\n      });\n\n      it('should throw an error on post request connection error', async () => {\n        const objectStorageWithMiddlewares = new ObjectStorage(config);\n        objectStorageWithMiddlewares.use(encryptStream, decryptStream);\n        objectStorageWithMiddlewares.use(zip, unzip);\n        const objectStorageWithMiddlewaresCalls = nock(config.uri)\n        // @ts-ignore: Nock .d.ts are outdated.\n          .matchHeader('authorization', `Bearer ${config.jwtSecret}`)\n          .post('/objects')\n          .replyWithError({ code: 'ECONNREFUSED' })\n          .post('/objects')\n          .replyWithError({ code: 'ECONNREFUSED' })\n          .post('/objects')\n          .replyWithError({ code: 'ECONNREFUSED' });\n\n        let err;\n        try {\n          await objectStorageWithMiddlewares.postObject(postData, {});\n        } catch (e) {\n          err = e;\n        }\n\n        expect(objectStorageWithMiddlewaresCalls.isDone()).to.be.true;\n        expect(err.code).to.be.equal('ECONNREFUSED');\n      });\n\n      it('should throw an error on post request http error', async () => {\n        const objectStorageWithMiddlewares = new ObjectStorage(config);\n        objectStorageWithMiddlewares.use(encryptStream, decryptStream);\n        objectStorageWithMiddlewares.use(zip, unzip);\n        const objectStorageWithMiddlewaresCalls = nock(config.uri)\n        // @ts-ignore: Nock .d.ts are outdated.\n          .matchHeader('authorization', `Bearer ${config.jwtSecret}`)\n          .post('/objects')\n          .reply(409)\n          .post('/objects')\n          .reply(409)\n          .post('/objects')\n          .reply(409);\n\n        let err;\n        try {\n          await objectStorageWithMiddlewares.postObject(postData, {});\n        } catch (e) {\n          err = e;\n        }\n        expect(objectStorageWithMiddlewaresCalls.isDone()).to.be.true;\n        expect(err.toString()).to.include('409');\n      });\n\n      it('should post successfully', async () => {\n        const objectStorageWithMiddlewares = new ObjectStorage(config);\n        objectStorageWithMiddlewares.use(encryptStream, decryptStream);\n        objectStorageWithMiddlewares.use(zip, unzip);\n        const objectStorageWithMiddlewaresCalls = nock(config.uri)\n        // @ts-ignore: Nock .d.ts are outdated.\n          .matchHeader('authorization', `Bearer ${config.jwtSecret}`)\n          .post('/objects')\n          .reply(200, { objectId: '1' });\n\n        const response:any = await objectStorageWithMiddlewares.postObject(postData, {});\n\n        expect(objectStorageWithMiddlewaresCalls.isDone()).to.be.true;\n        expect(response.objectId).to.be.equal('1');\n      });\n\n      it('should add 2 objects successfully', async () => {\n        const objectStorageWithMiddlewares = new ObjectStorage(config);\n        objectStorageWithMiddlewares.use(encryptStream, decryptStream);\n        objectStorageWithMiddlewares.use(zip, unzip);\n        const objectStorageWithMiddlewaresCalls = nock(config.uri)\n        // @ts-ignore: Nock .d.ts are outdated.\n          .matchHeader('authorization', `Bearer ${config.jwtSecret}`)\n          .post('/objects')\n          .reply(200, { objectId: '1' })\n          .post('/objects')\n          .reply(200, { objectId: '2' });\n\n        const response1: any = await objectStorageWithMiddlewares.postObject(postData, {});\n        const response2: any = await objectStorageWithMiddlewares.postObject(postData, {});\n        expect(objectStorageWithMiddlewaresCalls.isDone()).to.be.true;\n        expect(response1.objectId).to.be.equal('1');\n        expect(response2.objectId).to.be.equal('2');\n      });\n\n      it('should get 2 objects successfully', async () => {\n        const objectStorageWithMiddlewares = new ObjectStorage(config);\n        objectStorageWithMiddlewares.use(encryptStream, decryptStream);\n        objectStorageWithMiddlewares.use(zip, unzip);\n\n        const objectStorageWithMiddlewaresCalls = nock(config.uri)\n        // @ts-ignore: Nock .d.ts are outdated.\n          .matchHeader('authorization', `Bearer ${config.jwtSecret}`)\n          .get('/objects/1')\n          .reply(200, () => {\n            const stream = streamResponse(responseData)();\n            return stream.pipe(encryptStream()).pipe(zip());\n          })\n          .get('/objects/2')\n          .reply(200, () => {\n            const stream = streamResponse(responseData)();\n            return stream.pipe(encryptStream()).pipe(zip());\n          });\n\n        const outStreamFirst = await objectStorageWithMiddlewares.getById('1');\n        const outStreamSecond = await objectStorageWithMiddlewares.getById('2');\n        expect(objectStorageWithMiddlewaresCalls.isDone()).to.be.true;\n        expect(outStreamFirst).to.be.deep.equal(responseString);\n        expect(outStreamSecond).to.be.deep.equal(responseString);\n      });\n\n      it('should use valid jwt token', async () => {\n        const objectStorageWithMiddlewares = new ObjectStorage(config);\n        objectStorageWithMiddlewares.use(encryptStream, decryptStream);\n        objectStorageWithMiddlewares.use(zip, unzip);\n        const objectStorageWithMiddlewaresCalls = nock(config.uri)\n        // @ts-ignore: Nock .d.ts are outdated.\n          .matchHeader('authorization', `Bearer ${config.jwtSecret}`)\n          .post('/objects')\n          .reply(200);\n\n        const response:any = await objectStorageWithMiddlewares.postObject(postData, {});\n\n        expect(objectStorageWithMiddlewaresCalls.isDone()).to.be.true;\n        expect(response.objectId).to.match(/^[0-9a-z-]+$/);\n      });\n    });\n  });\n});\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"32ccd2a833bd6e585cf90fa31dcc69d941cbba0d","contentHash":"a52f3544fbd7407ca7cf98df9515eb48183eaf11051dbb38aa7d03ab467603eb"},"/home/illya/work/maester-client/src/ObjectStorage.ts":{"path":"/home/illya/work/maester-client/src/ObjectStorage.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":17},"end":{"line":6,"column":34}},"4":{"start":{"line":7,"column":21},"end":{"line":7,"column":59}},"5":{"start":{"line":8,"column":24},"end":{"line":8,"column":67}},"6":{"start":{"line":11,"column":8},"end":{"line":11,"column":68}},"7":{"start":{"line":12,"column":8},"end":{"line":12,"column":27}},"8":{"start":{"line":13,"column":8},"end":{"line":13,"column":27}},"9":{"start":{"line":17,"column":8},"end":{"line":17,"column":93}},"10":{"start":{"line":17,"column":58},"end":{"line":17,"column":83}},"11":{"start":{"line":20,"column":27},"end":{"line":20,"column":47}},"12":{"start":{"line":21,"column":23},"end":{"line":21,"column":46}},"13":{"start":{"line":22,"column":8},"end":{"line":22,"column":32}},"14":{"start":{"line":23,"column":8},"end":{"line":23,"column":26}},"15":{"start":{"line":24,"column":8},"end":{"line":24,"column":22}},"16":{"start":{"line":27,"column":8},"end":{"line":27,"column":36}},"17":{"start":{"line":28,"column":8},"end":{"line":28,"column":39}},"18":{"start":{"line":29,"column":8},"end":{"line":29,"column":20}},"19":{"start":{"line":32,"column":25},"end":{"line":32,"column":63}},"20":{"start":{"line":33,"column":23},"end":{"line":33,"column":65}},"21":{"start":{"line":34,"column":8},"end":{"line":34,"column":44}},"22":{"start":{"line":37,"column":25},"end":{"line":37,"column":74}},"23":{"start":{"line":38,"column":23},"end":{"line":38,"column":65}},"24":{"start":{"line":39,"column":8},"end":{"line":39,"column":44}},"25":{"start":{"line":42,"column":25},"end":{"line":42,"column":62}},"26":{"start":{"line":43,"column":23},"end":{"line":43,"column":65}},"27":{"start":{"line":44,"column":8},"end":{"line":44,"column":44}},"28":{"start":{"line":47,"column":25},"end":{"line":47,"column":61}},"29":{"start":{"line":48,"column":23},"end":{"line":48,"column":65}},"30":{"start":{"line":49,"column":8},"end":{"line":49,"column":44}},"31":{"start":{"line":52,"column":29},"end":{"line":52,"column":94}},"32":{"start":{"line":52,"column":35},"end":{"line":52,"column":94}},"33":{"start":{"line":53,"column":20},"end":{"line":53,"column":72}},"34":{"start":{"line":54,"column":8},"end":{"line":54,"column":24}},"35":{"start":{"line":57,"column":29},"end":{"line":57,"column":94}},"36":{"start":{"line":57,"column":35},"end":{"line":57,"column":94}},"37":{"start":{"line":58,"column":20},"end":{"line":58,"column":76}},"38":{"start":{"line":59,"column":8},"end":{"line":59,"column":24}},"39":{"start":{"line":62,"column":0},"end":{"line":62,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":4},"end":{"line":10,"column":5}},"loc":{"start":{"line":10,"column":32},"end":{"line":14,"column":5}},"line":10},"2":{"name":"(anonymous_2)","decl":{"start":{"line":15,"column":4},"end":{"line":15,"column":5}},"loc":{"start":{"line":15,"column":42},"end":{"line":18,"column":5}},"line":15},"3":{"name":"(anonymous_3)","decl":{"start":{"line":17,"column":34},"end":{"line":17,"column":35}},"loc":{"start":{"line":17,"column":58},"end":{"line":17,"column":83}},"line":17},"4":{"name":"(anonymous_4)","decl":{"start":{"line":19,"column":4},"end":{"line":19,"column":5}},"loc":{"start":{"line":19,"column":21},"end":{"line":25,"column":5}},"line":19},"5":{"name":"(anonymous_5)","decl":{"start":{"line":26,"column":4},"end":{"line":26,"column":5}},"loc":{"start":{"line":26,"column":26},"end":{"line":30,"column":5}},"line":26},"6":{"name":"(anonymous_6)","decl":{"start":{"line":31,"column":4},"end":{"line":31,"column":5}},"loc":{"start":{"line":31,"column":28},"end":{"line":35,"column":5}},"line":31},"7":{"name":"(anonymous_7)","decl":{"start":{"line":36,"column":4},"end":{"line":36,"column":5}},"loc":{"start":{"line":36,"column":33},"end":{"line":40,"column":5}},"line":36},"8":{"name":"(anonymous_8)","decl":{"start":{"line":41,"column":4},"end":{"line":41,"column":5}},"loc":{"start":{"line":41,"column":30},"end":{"line":45,"column":5}},"line":41},"9":{"name":"(anonymous_9)","decl":{"start":{"line":46,"column":4},"end":{"line":46,"column":5}},"loc":{"start":{"line":46,"column":29},"end":{"line":50,"column":5}},"line":46},"10":{"name":"(anonymous_10)","decl":{"start":{"line":51,"column":4},"end":{"line":51,"column":5}},"loc":{"start":{"line":51,"column":36},"end":{"line":55,"column":5}},"line":51},"11":{"name":"(anonymous_11)","decl":{"start":{"line":52,"column":29},"end":{"line":52,"column":30}},"loc":{"start":{"line":52,"column":35},"end":{"line":52,"column":94}},"line":52},"12":{"name":"(anonymous_12)","decl":{"start":{"line":56,"column":4},"end":{"line":56,"column":5}},"loc":{"start":{"line":56,"column":36},"end":{"line":60,"column":5}},"line":56},"13":{"name":"(anonymous_13)","decl":{"start":{"line":57,"column":29},"end":{"line":57,"column":30}},"loc":{"start":{"line":57,"column":35},"end":{"line":57,"column":94}},"line":57}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":11,"column":22},"end":{"line":11,"column":67}},"type":"binary-expr","locations":[{"start":{"line":11,"column":22},"end":{"line":11,"column":28}},{"start":{"line":11,"column":32},"end":{"line":11,"column":67}}],"line":11}},"s":{"0":1,"1":2,"2":1,"3":1,"4":1,"5":1,"6":15,"7":15,"8":15,"9":38,"10":26,"11":22,"12":22,"13":22,"14":22,"15":22,"16":16,"17":16,"18":16,"19":8,"20":6,"21":6,"22":6,"23":6,"24":6,"25":1,"26":1,"27":1,"28":3,"29":3,"30":3,"31":13,"32":21,"33":13,"34":9,"35":1,"36":1,"37":1,"38":1,"39":1},"f":{"0":2,"1":15,"2":38,"3":26,"4":22,"5":16,"6":8,"7":6,"8":1,"9":3,"10":13,"11":21,"12":1,"13":1},"b":{"0":[1,1,1],"1":[1,1],"2":[2,2],"3":[15,15]},"inputSourceMap":{"version":3,"file":"/home/illya/work/maester-client/src/ObjectStorage.ts","sources":["/home/illya/work/maester-client/src/ObjectStorage.ts"],"names":[],"mappings":"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","sourcesContent":["import { Readable, Duplex } from 'stream';\nimport getStream from 'get-stream';\nimport StorageClient from './StorageClient';\n\nexport type TransformMiddleware = () => Duplex;\n\nexport default class ObjectStorage {\n  private client: StorageClient;\n\n  private forwards: TransformMiddleware[];\n\n  private reverses: TransformMiddleware[];\n\n  public constructor(config: { uri: string; jwtSecret: string }, client?: StorageClient) {\n    this.client = client || new StorageClient(config);\n    this.forwards = [];\n    this.reverses = [];\n  }\n\n  private applyMiddlewares(stream: Readable, middlewares: TransformMiddleware[]): Readable {\n    // eslint-disable-next-line no-shadow\n    return middlewares.reduce((stream, middleware) => stream.pipe(middleware()), stream);\n  }\n\n  private formStream(data: object): Readable {\n    const dataString = JSON.stringify(data);\n    const stream = new Readable();\n    stream.push(dataString);\n    stream.push(null);\n    return stream;\n  }\n\n  public use(forward: TransformMiddleware, reverse: TransformMiddleware): ObjectStorage {\n    this.forwards.push(forward);\n    this.reverses.unshift(reverse);\n    return this;\n  }\n\n  public async getById(objectId: string): Promise<string> {\n    const { data } = await this.client.readStream(objectId);\n    const stream = this.applyMiddlewares(data, this.reverses);\n    return getStream(stream);\n  }\n\n  public async getAllByParams(params: object): Promise<string> {\n    const { data } = await this.client.readAllByParamsAsStream(params);\n    const stream = this.applyMiddlewares(data, this.reverses);\n    return getStream(stream);\n  }\n\n  public async deleteOne(objectId: string): Promise<string> {\n    const { data } = await this.client.deleteOne(objectId);\n    const stream = this.applyMiddlewares(data, this.reverses);\n    return getStream(stream);\n  }\n\n  public async deleteMany(params: object): Promise<string> {\n    const { data } = await this.client.deleteMany(params);\n    const stream = this.applyMiddlewares(data, this.reverses);\n    return getStream(stream);\n  }\n\n  public async postObject(data: object, headers: object): Promise<string> {\n    const resultStream = () => this.applyMiddlewares(this.formStream(data), this.forwards);\n    const res = await this.client.writeStream(resultStream, headers);\n    return res.data;\n  }\n\n  public async updateOne(objectId: string, data: object): Promise<string> {\n    const resultStream = () => this.applyMiddlewares(this.formStream(data), this.forwards);\n    const res = await this.client.updateAsStream(objectId, resultStream);\n    return res.data;\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"c96a8b3a8da209696fa5bf2e5f2d20cd65996655","contentHash":"c916ee3eadccfbe3f7a2715bcc613e0e06e158e75ead9ac33a2db02f4d6a66d7"},"/home/illya/work/maester-client/src/StorageClient.ts":{"path":"/home/illya/work/maester-client/src/StorageClient.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":7,"column":16},"end":{"line":7,"column":49}},"4":{"start":{"line":8,"column":15},"end":{"line":8,"column":47}},"5":{"start":{"line":9,"column":16},"end":{"line":9,"column":49}},"6":{"start":{"line":10,"column":17},"end":{"line":10,"column":53}},"7":{"start":{"line":13,"column":8},"end":{"line":20,"column":11}},"8":{"start":{"line":21,"column":8},"end":{"line":21,"column":42}},"9":{"start":{"line":24,"column":23},"end":{"line":24,"column":24}},"10":{"start":{"line":27,"column":8},"end":{"line":47,"column":9}},"11":{"start":{"line":28,"column":12},"end":{"line":28,"column":23}},"12":{"start":{"line":29,"column":12},"end":{"line":29,"column":23}},"13":{"start":{"line":30,"column":12},"end":{"line":30,"column":23}},"14":{"start":{"line":31,"column":12},"end":{"line":36,"column":13}},"15":{"start":{"line":32,"column":16},"end":{"line":32,"column":38}},"16":{"start":{"line":35,"column":16},"end":{"line":35,"column":24}},"17":{"start":{"line":37,"column":12},"end":{"line":39,"column":13}},"18":{"start":{"line":38,"column":16},"end":{"line":38,"column":25}},"19":{"start":{"line":41,"column":12},"end":{"line":45,"column":13}},"20":{"start":{"line":42,"column":16},"end":{"line":42,"column":117}},"21":{"start":{"line":43,"column":16},"end":{"line":43,"column":75}},"22":{"start":{"line":43,"column":47},"end":{"line":43,"column":73}},"23":{"start":{"line":44,"column":16},"end":{"line":44,"column":25}},"24":{"start":{"line":46,"column":12},"end":{"line":46,"column":18}},"25":{"start":{"line":48,"column":8},"end":{"line":50,"column":9}},"26":{"start":{"line":49,"column":12},"end":{"line":49,"column":106}},"27":{"start":{"line":51,"column":8},"end":{"line":51,"column":19}},"28":{"start":{"line":54,"column":8},"end":{"line":54,"column":86}},"29":{"start":{"line":57,"column":20},"end":{"line":61,"column":11}},"30":{"start":{"line":57,"column":56},"end":{"line":61,"column":10}},"31":{"start":{"line":62,"column":8},"end":{"line":62,"column":19}},"32":{"start":{"line":65,"column":20},"end":{"line":69,"column":11}},"33":{"start":{"line":65,"column":56},"end":{"line":69,"column":10}},"34":{"start":{"line":70,"column":8},"end":{"line":70,"column":19}},"35":{"start":{"line":73,"column":24},"end":{"line":73,"column":100}},"36":{"start":{"line":74,"column":20},"end":{"line":76,"column":11}},"37":{"start":{"line":74,"column":56},"end":{"line":76,"column":10}},"38":{"start":{"line":77,"column":8},"end":{"line":77,"column":19}},"39":{"start":{"line":80,"column":20},"end":{"line":83,"column":11}},"40":{"start":{"line":80,"column":56},"end":{"line":83,"column":10}},"41":{"start":{"line":84,"column":8},"end":{"line":84,"column":19}},"42":{"start":{"line":87,"column":20},"end":{"line":91,"column":11}},"43":{"start":{"line":87,"column":56},"end":{"line":91,"column":10}},"44":{"start":{"line":92,"column":8},"end":{"line":92,"column":19}},"45":{"start":{"line":95,"column":20},"end":{"line":97,"column":11}},"46":{"start":{"line":95,"column":56},"end":{"line":97,"column":10}},"47":{"start":{"line":98,"column":8},"end":{"line":98,"column":19}},"48":{"start":{"line":101,"column":0},"end":{"line":101,"column":32}},"49":{"start":{"line":102,"column":0},"end":{"line":102,"column":72}},"50":{"start":{"line":103,"column":0},"end":{"line":103,"column":74}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":12,"column":4},"end":{"line":12,"column":5}},"loc":{"start":{"line":12,"column":24},"end":{"line":22,"column":5}},"line":12},"2":{"name":"(anonymous_2)","decl":{"start":{"line":23,"column":4},"end":{"line":23,"column":5}},"loc":{"start":{"line":23,"column":83},"end":{"line":52,"column":5}},"line":23},"3":{"name":"(anonymous_3)","decl":{"start":{"line":43,"column":34},"end":{"line":43,"column":35}},"loc":{"start":{"line":43,"column":47},"end":{"line":43,"column":73}},"line":43},"4":{"name":"(anonymous_4)","decl":{"start":{"line":53,"column":4},"end":{"line":53,"column":5}},"loc":{"start":{"line":53,"column":31},"end":{"line":55,"column":5}},"line":53},"5":{"name":"(anonymous_5)","decl":{"start":{"line":56,"column":4},"end":{"line":56,"column":5}},"loc":{"start":{"line":56,"column":39},"end":{"line":63,"column":5}},"line":56},"6":{"name":"(anonymous_6)","decl":{"start":{"line":57,"column":44},"end":{"line":57,"column":45}},"loc":{"start":{"line":57,"column":56},"end":{"line":61,"column":10}},"line":57},"7":{"name":"(anonymous_7)","decl":{"start":{"line":64,"column":4},"end":{"line":64,"column":5}},"loc":{"start":{"line":64,"column":42},"end":{"line":71,"column":5}},"line":64},"8":{"name":"(anonymous_8)","decl":{"start":{"line":65,"column":44},"end":{"line":65,"column":45}},"loc":{"start":{"line":65,"column":56},"end":{"line":69,"column":10}},"line":65},"9":{"name":"(anonymous_9)","decl":{"start":{"line":72,"column":4},"end":{"line":72,"column":5}},"loc":{"start":{"line":72,"column":45},"end":{"line":78,"column":5}},"line":72},"10":{"name":"(anonymous_10)","decl":{"start":{"line":74,"column":44},"end":{"line":74,"column":45}},"loc":{"start":{"line":74,"column":56},"end":{"line":76,"column":10}},"line":74},"11":{"name":"(anonymous_11)","decl":{"start":{"line":79,"column":4},"end":{"line":79,"column":5}},"loc":{"start":{"line":79,"column":30},"end":{"line":85,"column":5}},"line":79},"12":{"name":"(anonymous_12)","decl":{"start":{"line":80,"column":44},"end":{"line":80,"column":45}},"loc":{"start":{"line":80,"column":56},"end":{"line":83,"column":10}},"line":80},"13":{"name":"(anonymous_13)","decl":{"start":{"line":86,"column":4},"end":{"line":86,"column":5}},"loc":{"start":{"line":86,"column":29},"end":{"line":93,"column":5}},"line":86},"14":{"name":"(anonymous_14)","decl":{"start":{"line":87,"column":44},"end":{"line":87,"column":45}},"loc":{"start":{"line":87,"column":56},"end":{"line":91,"column":10}},"line":87},"15":{"name":"(anonymous_15)","decl":{"start":{"line":94,"column":4},"end":{"line":94,"column":5}},"loc":{"start":{"line":94,"column":43},"end":{"line":99,"column":5}},"line":94},"16":{"name":"(anonymous_16)","decl":{"start":{"line":95,"column":44},"end":{"line":95,"column":45}},"loc":{"start":{"line":95,"column":56},"end":{"line":97,"column":10}},"line":95}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":23,"column":32},"end":{"line":23,"column":81}},"type":"default-arg","locations":[{"start":{"line":23,"column":79},"end":{"line":23,"column":81}}],"line":23},"4":{"loc":{"start":{"line":23,"column":34},"end":{"line":23,"column":49}},"type":"default-arg","locations":[{"start":{"line":23,"column":48},"end":{"line":23,"column":49}}],"line":23},"5":{"loc":{"start":{"line":23,"column":51},"end":{"line":23,"column":62}},"type":"default-arg","locations":[{"start":{"line":23,"column":59},"end":{"line":23,"column":62}}],"line":23},"6":{"loc":{"start":{"line":37,"column":12},"end":{"line":39,"column":13}},"type":"if","locations":[{"start":{"line":37,"column":12},"end":{"line":39,"column":13}},{"start":{"line":37,"column":12},"end":{"line":39,"column":13}}],"line":37},"7":{"loc":{"start":{"line":37,"column":16},"end":{"line":37,"column":50}},"type":"binary-expr","locations":[{"start":{"line":37,"column":16},"end":{"line":37,"column":26}},{"start":{"line":37,"column":30},"end":{"line":37,"column":50}}],"line":37},"8":{"loc":{"start":{"line":41,"column":12},"end":{"line":45,"column":13}},"type":"if","locations":[{"start":{"line":41,"column":12},"end":{"line":45,"column":13}},{"start":{"line":41,"column":12},"end":{"line":45,"column":13}}],"line":41},"9":{"loc":{"start":{"line":41,"column":16},"end":{"line":41,"column":68}},"type":"binary-expr","locations":[{"start":{"line":41,"column":17},"end":{"line":41,"column":20}},{"start":{"line":41,"column":24},"end":{"line":41,"column":41}},{"start":{"line":41,"column":46},"end":{"line":41,"column":68}}],"line":41},"10":{"loc":{"start":{"line":42,"column":73},"end":{"line":42,"column":115}},"type":"binary-expr","locations":[{"start":{"line":42,"column":73},"end":{"line":42,"column":76}},{"start":{"line":42,"column":80},"end":{"line":42,"column":115}}],"line":42},"11":{"loc":{"start":{"line":48,"column":8},"end":{"line":50,"column":9}},"type":"if","locations":[{"start":{"line":48,"column":8},"end":{"line":50,"column":9}},{"start":{"line":48,"column":8},"end":{"line":50,"column":9}}],"line":48},"12":{"loc":{"start":{"line":48,"column":12},"end":{"line":48,"column":36}},"type":"binary-expr","locations":[{"start":{"line":48,"column":12},"end":{"line":48,"column":15}},{"start":{"line":48,"column":19},"end":{"line":48,"column":36}}],"line":48},"13":{"loc":{"start":{"line":49,"column":18},"end":{"line":49,"column":105}},"type":"binary-expr","locations":[{"start":{"line":49,"column":18},"end":{"line":49,"column":21}},{"start":{"line":49,"column":25},"end":{"line":49,"column":105}}],"line":49}},"s":{"0":1,"1":4,"2":1,"3":1,"4":1,"5":1,"6":1,"7":20,"8":20,"9":37,"10":37,"11":57,"12":57,"13":57,"14":57,"15":57,"16":14,"17":57,"18":0,"19":57,"20":20,"21":20,"22":20,"23":20,"24":37,"25":37,"26":7,"27":30,"28":57,"29":11,"30":21,"31":8,"32":6,"33":6,"34":6,"35":15,"36":15,"37":25,"38":11,"39":1,"40":1,"41":1,"42":3,"43":3,"44":3,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1},"f":{"0":4,"1":20,"2":37,"3":20,"4":57,"5":11,"6":21,"7":6,"8":6,"9":15,"10":25,"11":1,"12":1,"13":3,"14":3,"15":1,"16":1},"b":{"0":[1,1,1],"1":[1,3],"2":[4,4],"3":[37],"4":[37],"5":[37],"6":[0,57],"7":[57,0],"8":[20,37],"9":[57,43,27],"10":[20,11],"11":[7,30],"12":[37,32],"13":[7,2]},"inputSourceMap":{"version":3,"file":"/home/illya/work/maester-client/src/StorageClient.ts","sources":["/home/illya/work/maester-client/src/StorageClient.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable no-continue */\nimport axios, { AxiosInstance, AxiosResponse } from 'axios';\nimport http from 'http';\nimport https from 'https';\nimport { Readable } from 'stream';\nimport log from './logger';\n\ninterface RequestHeaders {\n  [index: string]: string | number;\n}\n\nexport interface JWTPayload {\n  [index: string]: string;\n}\nexport interface RequestOptions {\n  maxAttempts?: number;\n  delay?: number;\n  onResponse?: (err: Error, res: AxiosResponse) => boolean;\n}\n\nexport default class StorageClient {\n  private api: AxiosInstance;\n\n  private readonly jwtSecret: string;\n\n  private static httpAgent = new http.Agent({ keepAlive: true });\n\n  private static httpsAgent = new https.Agent({ keepAlive: true });\n\n  public constructor(config: { uri: string; jwtSecret: string }) {\n    this.api = axios.create({\n      baseURL: `${config.uri}/`,\n      httpAgent: StorageClient.httpAgent,\n      httpsAgent: StorageClient.httpsAgent,\n      validateStatus: null,\n      maxContentLength: Infinity,\n      maxRedirects: 0,\n    });\n    this.jwtSecret = config.jwtSecret;\n  }\n\n  private async requestRetry(\n    request: () => Promise<AxiosResponse>,\n    { maxAttempts = 3, delay = 100, onResponse }: RequestOptions = {},\n  ): Promise<AxiosResponse> {\n    let attempts = 0;\n    let res;\n    let err;\n    while (attempts < maxAttempts) {\n      err = null;\n      res = null;\n      attempts++;\n      try {\n        res = await request();\n      } catch (e) {\n        err = e;\n      }\n      if (onResponse && onResponse(err, res)) {\n        continue;\n      }\n      // last attempt error should not be logged\n      if ((err || res.status >= 400) && attempts < maxAttempts) {\n        log.warn('Error during object request: %s', err || `${res.status} (${res.statusText})`);\n        await new Promise((resolve): NodeJS.Timeout => setTimeout(resolve, delay));\n        continue;\n      }\n      break;\n    }\n    if (err || res.status >= 400) {\n      throw err || new Error(`HTTP error during object request: ${res.status} (${res.statusText})`);\n    }\n    return res;\n  }\n\n  private async getHeaders(override?: RequestHeaders) {\n    return { Authorization: `Bearer ${this.jwtSecret}`, ...override };\n  }\n\n  public async readStream(objectId: string, params?: object): Promise<AxiosResponse> {\n    const res = await this.requestRetry(\n      async (): Promise<AxiosResponse> => this.api.get(`/objects/${objectId}`, {\n        responseType: 'stream',\n        headers: await this.getHeaders(),\n        params,\n      }),\n    );\n    return res;\n  }\n\n  public async readAllByParamsAsStream(params: object): Promise<AxiosResponse> {\n    const res = await this.requestRetry(\n      async (): Promise<AxiosResponse> => this.api.get('/objects', {\n        responseType: 'stream',\n        headers: await this.getHeaders(),\n        params,\n      }),\n    );\n    return res;\n  }\n\n  public async writeStream(stream: () => Readable, customHeaders: object): Promise<AxiosResponse> {\n    const headers: RequestHeaders = {\n      'content-type': 'application/octet-stream',\n      ...customHeaders,\n    };\n    const res = await this.requestRetry(\n      async (): Promise<AxiosResponse> => this.api.post('/objects', stream(), {\n        headers: await this.getHeaders(headers),\n      }),\n    );\n    return res;\n  }\n\n  public async deleteOne(objectId: string): Promise<AxiosResponse> {\n    const res = await this.requestRetry(\n      async (): Promise<AxiosResponse> => this.api.delete(`/objects/${objectId}`, {\n        responseType: 'stream',\n        headers: await this.getHeaders(),\n      }),\n    );\n    return res;\n  }\n\n  public async deleteMany(params: object): Promise<AxiosResponse> {\n    const res = await this.requestRetry(\n      async (): Promise<AxiosResponse> => this.api.delete('/objects', {\n        responseType: 'stream',\n        headers: await this.getHeaders(),\n        params,\n      }),\n    );\n    return res;\n  }\n\n  public async updateAsStream(objectId: string, stream: () => Readable): Promise<AxiosResponse> {\n    const res = await this.requestRetry(\n      async (): Promise<AxiosResponse> => this.api.put(`/objects/${objectId}`, stream(), {\n        headers: await this.getHeaders(),\n      }),\n    );\n    return res;\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"e8d696b4bbe64da237b4604c3d8e470d7ea5e7be","contentHash":"71c2c01a997b20df489427ef6d516bf9db98d771c8eedf3b73c94a0c1c92a390"},"/home/illya/work/maester-client/src/logger.ts":{"path":"/home/illya/work/maester-client/src/logger.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":24},"end":{"line":3,"column":60}},"2":{"start":{"line":5,"column":0},"end":{"line":8,"column":3}}},"fnMap":{},"branchMap":{"0":{"loc":{"start":{"line":7,"column":12},"end":{"line":7,"column":111}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":87}},{"start":{"line":7,"column":90},"end":{"line":7,"column":111}}],"line":7},"1":{"loc":{"start":{"line":7,"column":46},"end":{"line":7,"column":87}},"type":"binary-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":71},"end":{"line":7,"column":87}}],"line":7}},"s":{"0":1,"1":1,"2":1},"f":{},"b":{"0":[1,0],"1":[1,1]},"inputSourceMap":{"version":3,"file":"/home/illya/work/maester-client/src/logger.ts","sources":["/home/illya/work/maester-client/src/logger.ts"],"names":[],"mappings":";;AAAA,6DAAmE;AAEnE,gBAAgB;AAChB,kBAAe,4BAAY,CAAC;IAC1B,IAAI,EAAE,uBAAuB;IAC7B,KAAK,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,IAAI,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAa;CACzH,CAAC,CAAC","sourcesContent":["import { createLogger, LogLevel } from '@elastic.io/bunyan-logger';\n\n/** @internal */\nexport default createLogger({\n  name: 'object-storage-client',\n  level: (process.env.NODE_ENV === 'test' ? process.env.LOG_LEVEL || Number.MAX_VALUE : process.env.LOG_LEVEL) as LogLevel,\n});\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"cc51d54a812c5d548c1d192fccd8dea154f7e33e","contentHash":"c003b7ba5bdd30399a0328acd6c74280fd35dbeef17a9b2d8b8cc55cb1c69d98"},"/home/illya/work/maester-client/spec/ObjectStorageWrapper.spec.ts":{"path":"/home/illya/work/maester-client/spec/ObjectStorageWrapper.spec.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":17}},"4":{"start":{"line":8,"column":17},"end":{"line":8,"column":83}},"5":{"start":{"line":9,"column":15},"end":{"line":9,"column":47}},"6":{"start":{"line":10,"column":15},"end":{"line":10,"column":47}},"7":{"start":{"line":11,"column":16},"end":{"line":11,"column":49}},"8":{"start":{"line":12,"column":31},"end":{"line":12,"column":69}},"9":{"start":{"line":13,"column":19},"end":{"line":13,"column":33}},"10":{"start":{"line":14,"column":0},"end":{"line":15,"column":336}},"11":{"start":{"line":16,"column":0},"end":{"line":16,"column":44}},"12":{"start":{"line":17,"column":0},"end":{"line":17,"column":39}},"13":{"start":{"line":18,"column":0},"end":{"line":18,"column":55}},"14":{"start":{"line":19,"column":0},"end":{"line":19,"column":61}},"15":{"start":{"line":20,"column":0},"end":{"line":20,"column":42}},"16":{"start":{"line":23,"column":0},"end":{"line":349,"column":3}},"17":{"start":{"line":24,"column":23},"end":{"line":30,"column":5}},"18":{"start":{"line":25,"column":30},"end":{"line":25,"column":32}},"19":{"start":{"line":26,"column":8},"end":{"line":28,"column":9}},"20":{"start":{"line":26,"column":21},"end":{"line":26,"column":22}},"21":{"start":{"line":27,"column":12},"end":{"line":27,"column":71}},"22":{"start":{"line":29,"column":8},"end":{"line":29,"column":29}},"23":{"start":{"line":31,"column":17},"end":{"line":33,"column":5}},"24":{"start":{"line":34,"column":24},"end":{"line":37,"column":5}},"25":{"start":{"line":38,"column":20},"end":{"line":38,"column":35}},"26":{"start":{"line":39,"column":21},"end":{"line":39,"column":26}},"27":{"start":{"line":40,"column":23},"end":{"line":40,"column":28}},"28":{"start":{"line":41,"column":16},"end":{"line":41,"column":18}},"29":{"start":{"line":42,"column":15},"end":{"line":42,"column":22}},"30":{"start":{"line":43,"column":23},"end":{"line":43,"column":40}},"31":{"start":{"line":44,"column":43},"end":{"line":52,"column":5}},"32":{"start":{"line":53,"column":50},"end":{"line":61,"column":5}},"33":{"start":{"line":62,"column":4},"end":{"line":68,"column":7}},"34":{"start":{"line":63,"column":8},"end":{"line":66,"column":10}},"35":{"start":{"line":67,"column":8},"end":{"line":67,"column":88}},"36":{"start":{"line":69,"column":4},"end":{"line":71,"column":7}},"37":{"start":{"line":70,"column":8},"end":{"line":70,"column":36}},"38":{"start":{"line":72,"column":4},"end":{"line":76,"column":7}},"39":{"start":{"line":73,"column":8},"end":{"line":73,"column":33}},"40":{"start":{"line":74,"column":8},"end":{"line":74,"column":34}},"41":{"start":{"line":75,"column":8},"end":{"line":75,"column":34}},"42":{"start":{"line":77,"column":4},"end":{"line":175,"column":7}},"43":{"start":{"line":78,"column":8},"end":{"line":113,"column":11}},"44":{"start":{"line":79,"column":12},"end":{"line":102,"column":15}},"45":{"start":{"line":80,"column":16},"end":{"line":87,"column":19}},"46":{"start":{"line":81,"column":20},"end":{"line":85,"column":68}},"47":{"start":{"line":86,"column":20},"end":{"line":86,"column":90}},"48":{"start":{"line":88,"column":16},"end":{"line":101,"column":19}},"49":{"start":{"line":89,"column":20},"end":{"line":99,"column":68}},"50":{"start":{"line":100,"column":20},"end":{"line":100,"column":167}},"51":{"start":{"line":103,"column":12},"end":{"line":112,"column":15}},"52":{"start":{"line":104,"column":16},"end":{"line":107,"column":19}},"53":{"start":{"line":105,"column":20},"end":{"line":105,"column":138}},"54":{"start":{"line":106,"column":20},"end":{"line":106,"column":79}},"55":{"start":{"line":108,"column":16},"end":{"line":111,"column":19}},"56":{"start":{"line":109,"column":20},"end":{"line":109,"column":107}},"57":{"start":{"line":110,"column":20},"end":{"line":110,"column":66}},"58":{"start":{"line":114,"column":8},"end":{"line":174,"column":11}},"59":{"start":{"line":115,"column":12},"end":{"line":130,"column":15}},"60":{"start":{"line":116,"column":16},"end":{"line":122,"column":19}},"61":{"start":{"line":117,"column":20},"end":{"line":121,"column":23}},"62":{"start":{"line":120,"column":24},"end":{"line":120,"column":109}},"63":{"start":{"line":123,"column":16},"end":{"line":129,"column":19}},"64":{"start":{"line":124,"column":20},"end":{"line":128,"column":23}},"65":{"start":{"line":127,"column":24},"end":{"line":127,"column":109}},"66":{"start":{"line":131,"column":12},"end":{"line":142,"column":15}},"67":{"start":{"line":132,"column":16},"end":{"line":136,"column":19}},"68":{"start":{"line":133,"column":20},"end":{"line":135,"column":23}},"69":{"start":{"line":134,"column":24},"end":{"line":134,"column":109}},"70":{"start":{"line":137,"column":16},"end":{"line":141,"column":19}},"71":{"start":{"line":138,"column":20},"end":{"line":140,"column":23}},"72":{"start":{"line":139,"column":24},"end":{"line":139,"column":109}},"73":{"start":{"line":143,"column":12},"end":{"line":151,"column":15}},"74":{"start":{"line":144,"column":16},"end":{"line":150,"column":19}},"75":{"start":{"line":145,"column":20},"end":{"line":149,"column":23}},"76":{"start":{"line":148,"column":24},"end":{"line":148,"column":168}},"77":{"start":{"line":152,"column":12},"end":{"line":173,"column":15}},"78":{"start":{"line":153,"column":16},"end":{"line":162,"column":19}},"79":{"start":{"line":154,"column":20},"end":{"line":161,"column":23}},"80":{"start":{"line":160,"column":24},"end":{"line":160,"column":94}},"81":{"start":{"line":163,"column":16},"end":{"line":172,"column":19}},"82":{"start":{"line":164,"column":20},"end":{"line":171,"column":23}},"83":{"start":{"line":170,"column":24},"end":{"line":170,"column":94}},"84":{"start":{"line":176,"column":4},"end":{"line":189,"column":7}},"85":{"start":{"line":177,"column":8},"end":{"line":188,"column":11}},"86":{"start":{"line":178,"column":12},"end":{"line":182,"column":15}},"87":{"start":{"line":179,"column":16},"end":{"line":179,"column":82}},"88":{"start":{"line":180,"column":31},"end":{"line":180,"column":78}},"89":{"start":{"line":181,"column":16},"end":{"line":181,"column":54}},"90":{"start":{"line":183,"column":12},"end":{"line":187,"column":15}},"91":{"start":{"line":184,"column":16},"end":{"line":184,"column":85}},"92":{"start":{"line":185,"column":31},"end":{"line":185,"column":78}},"93":{"start":{"line":186,"column":16},"end":{"line":186,"column":54}},"94":{"start":{"line":190,"column":4},"end":{"line":269,"column":7}},"95":{"start":{"line":191,"column":8},"end":{"line":197,"column":11}},"96":{"start":{"line":192,"column":12},"end":{"line":196,"column":15}},"97":{"start":{"line":193,"column":16},"end":{"line":193,"column":107}},"98":{"start":{"line":194,"column":31},"end":{"line":194,"column":128}},"99":{"start":{"line":195,"column":16},"end":{"line":195,"column":49}},"100":{"start":{"line":198,"column":8},"end":{"line":268,"column":11}},"101":{"start":{"line":199,"column":12},"end":{"line":228,"column":15}},"102":{"start":{"line":200,"column":16},"end":{"line":204,"column":19}},"103":{"start":{"line":201,"column":20},"end":{"line":201,"column":97}},"104":{"start":{"line":202,"column":35},"end":{"line":202,"column":107}},"105":{"start":{"line":203,"column":20},"end":{"line":203,"column":53}},"106":{"start":{"line":205,"column":16},"end":{"line":211,"column":19}},"107":{"start":{"line":206,"column":20},"end":{"line":208,"column":40}},"108":{"start":{"line":209,"column":35},"end":{"line":209,"column":107}},"109":{"start":{"line":210,"column":20},"end":{"line":210,"column":53}},"110":{"start":{"line":212,"column":16},"end":{"line":218,"column":19}},"111":{"start":{"line":213,"column":20},"end":{"line":217,"column":23}},"112":{"start":{"line":214,"column":24},"end":{"line":214,"column":150}},"113":{"start":{"line":215,"column":39},"end":{"line":215,"column":111}},"114":{"start":{"line":216,"column":24},"end":{"line":216,"column":87}},"115":{"start":{"line":219,"column":16},"end":{"line":227,"column":19}},"116":{"start":{"line":220,"column":20},"end":{"line":226,"column":23}},"117":{"start":{"line":221,"column":24},"end":{"line":223,"column":113}},"118":{"start":{"line":224,"column":39},"end":{"line":224,"column":111}},"119":{"start":{"line":225,"column":24},"end":{"line":225,"column":126}},"120":{"start":{"line":229,"column":12},"end":{"line":267,"column":15}},"121":{"start":{"line":230,"column":16},"end":{"line":238,"column":19}},"122":{"start":{"line":231,"column":20},"end":{"line":237,"column":23}},"123":{"start":{"line":232,"column":24},"end":{"line":236,"column":27}},"124":{"start":{"line":235,"column":28},"end":{"line":235,"column":113}},"125":{"start":{"line":239,"column":16},"end":{"line":245,"column":19}},"126":{"start":{"line":240,"column":20},"end":{"line":244,"column":23}},"127":{"start":{"line":241,"column":24},"end":{"line":243,"column":27}},"128":{"start":{"line":242,"column":28},"end":{"line":242,"column":113}},"129":{"start":{"line":246,"column":16},"end":{"line":254,"column":19}},"130":{"start":{"line":247,"column":20},"end":{"line":253,"column":23}},"131":{"start":{"line":248,"column":24},"end":{"line":252,"column":27}},"132":{"start":{"line":251,"column":28},"end":{"line":251,"column":172}},"133":{"start":{"line":255,"column":16},"end":{"line":266,"column":19}},"134":{"start":{"line":256,"column":20},"end":{"line":265,"column":23}},"135":{"start":{"line":257,"column":24},"end":{"line":264,"column":27}},"136":{"start":{"line":263,"column":28},"end":{"line":263,"column":98}},"137":{"start":{"line":270,"column":4},"end":{"line":287,"column":7}},"138":{"start":{"line":271,"column":8},"end":{"line":277,"column":11}},"139":{"start":{"line":272,"column":12},"end":{"line":276,"column":15}},"140":{"start":{"line":273,"column":16},"end":{"line":273,"column":89}},"141":{"start":{"line":274,"column":31},"end":{"line":274,"column":87}},"142":{"start":{"line":275,"column":16},"end":{"line":275,"column":58}},"143":{"start":{"line":278,"column":8},"end":{"line":286,"column":11}},"144":{"start":{"line":279,"column":12},"end":{"line":285,"column":15}},"145":{"start":{"line":280,"column":16},"end":{"line":284,"column":19}},"146":{"start":{"line":281,"column":20},"end":{"line":281,"column":83}},"147":{"start":{"line":282,"column":35},"end":{"line":282,"column":82}},"148":{"start":{"line":283,"column":20},"end":{"line":283,"column":48}},"149":{"start":{"line":288,"column":4},"end":{"line":348,"column":7}},"150":{"start":{"line":289,"column":8},"end":{"line":347,"column":11}},"151":{"start":{"line":290,"column":12},"end":{"line":307,"column":15}},"152":{"start":{"line":291,"column":16},"end":{"line":294,"column":19}},"153":{"start":{"line":292,"column":20},"end":{"line":292,"column":96}},"154":{"start":{"line":293,"column":20},"end":{"line":293,"column":93}},"155":{"start":{"line":295,"column":16},"end":{"line":300,"column":19}},"156":{"start":{"line":296,"column":20},"end":{"line":298,"column":109}},"157":{"start":{"line":299,"column":20},"end":{"line":299,"column":93}},"158":{"start":{"line":301,"column":16},"end":{"line":306,"column":19}},"159":{"start":{"line":302,"column":20},"end":{"line":304,"column":40}},"160":{"start":{"line":305,"column":20},"end":{"line":305,"column":93}},"161":{"start":{"line":308,"column":12},"end":{"line":346,"column":15}},"162":{"start":{"line":309,"column":16},"end":{"line":317,"column":19}},"163":{"start":{"line":310,"column":20},"end":{"line":316,"column":23}},"164":{"start":{"line":311,"column":24},"end":{"line":315,"column":27}},"165":{"start":{"line":314,"column":28},"end":{"line":314,"column":113}},"166":{"start":{"line":318,"column":16},"end":{"line":324,"column":19}},"167":{"start":{"line":319,"column":20},"end":{"line":323,"column":23}},"168":{"start":{"line":320,"column":24},"end":{"line":322,"column":27}},"169":{"start":{"line":321,"column":28},"end":{"line":321,"column":113}},"170":{"start":{"line":325,"column":16},"end":{"line":333,"column":19}},"171":{"start":{"line":326,"column":20},"end":{"line":332,"column":23}},"172":{"start":{"line":327,"column":24},"end":{"line":331,"column":27}},"173":{"start":{"line":330,"column":28},"end":{"line":330,"column":172}},"174":{"start":{"line":334,"column":16},"end":{"line":345,"column":19}},"175":{"start":{"line":335,"column":20},"end":{"line":344,"column":23}},"176":{"start":{"line":336,"column":24},"end":{"line":343,"column":27}},"177":{"start":{"line":342,"column":28},"end":{"line":342,"column":98}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":23,"column":33},"end":{"line":23,"column":34}},"loc":{"start":{"line":23,"column":39},"end":{"line":349,"column":1}},"line":23},"2":{"name":"(anonymous_2)","decl":{"start":{"line":24,"column":23},"end":{"line":24,"column":24}},"loc":{"start":{"line":24,"column":35},"end":{"line":30,"column":5}},"line":24},"3":{"name":"(anonymous_3)","decl":{"start":{"line":62,"column":11},"end":{"line":62,"column":12}},"loc":{"start":{"line":62,"column":23},"end":{"line":68,"column":5}},"line":62},"4":{"name":"(anonymous_4)","decl":{"start":{"line":69,"column":15},"end":{"line":69,"column":16}},"loc":{"start":{"line":69,"column":27},"end":{"line":71,"column":5}},"line":69},"5":{"name":"(anonymous_5)","decl":{"start":{"line":72,"column":10},"end":{"line":72,"column":11}},"loc":{"start":{"line":72,"column":16},"end":{"line":76,"column":5}},"line":72},"6":{"name":"(anonymous_6)","decl":{"start":{"line":77,"column":30},"end":{"line":77,"column":31}},"loc":{"start":{"line":77,"column":36},"end":{"line":175,"column":5}},"line":77},"7":{"name":"(anonymous_7)","decl":{"start":{"line":78,"column":33},"end":{"line":78,"column":34}},"loc":{"start":{"line":78,"column":39},"end":{"line":113,"column":9}},"line":78},"8":{"name":"(anonymous_8)","decl":{"start":{"line":79,"column":55},"end":{"line":79,"column":56}},"loc":{"start":{"line":79,"column":61},"end":{"line":102,"column":13}},"line":79},"9":{"name":"(anonymous_9)","decl":{"start":{"line":80,"column":53},"end":{"line":80,"column":54}},"loc":{"start":{"line":80,"column":65},"end":{"line":87,"column":17}},"line":80},"10":{"name":"(anonymous_10)","decl":{"start":{"line":88,"column":53},"end":{"line":88,"column":54}},"loc":{"start":{"line":88,"column":65},"end":{"line":101,"column":17}},"line":88},"11":{"name":"(anonymous_11)","decl":{"start":{"line":103,"column":49},"end":{"line":103,"column":50}},"loc":{"start":{"line":103,"column":55},"end":{"line":112,"column":13}},"line":103},"12":{"name":"(anonymous_12)","decl":{"start":{"line":104,"column":53},"end":{"line":104,"column":54}},"loc":{"start":{"line":104,"column":65},"end":{"line":107,"column":17}},"line":104},"13":{"name":"(anonymous_13)","decl":{"start":{"line":108,"column":53},"end":{"line":108,"column":54}},"loc":{"start":{"line":108,"column":65},"end":{"line":111,"column":17}},"line":108},"14":{"name":"(anonymous_14)","decl":{"start":{"line":114,"column":35},"end":{"line":114,"column":36}},"loc":{"start":{"line":114,"column":41},"end":{"line":174,"column":9}},"line":114},"15":{"name":"(anonymous_15)","decl":{"start":{"line":115,"column":61},"end":{"line":115,"column":62}},"loc":{"start":{"line":115,"column":67},"end":{"line":130,"column":13}},"line":115},"16":{"name":"(anonymous_16)","decl":{"start":{"line":116,"column":41},"end":{"line":116,"column":42}},"loc":{"start":{"line":116,"column":53},"end":{"line":122,"column":17}},"line":116},"17":{"name":"(anonymous_17)","decl":{"start":{"line":119,"column":31},"end":{"line":119,"column":32}},"loc":{"start":{"line":119,"column":42},"end":{"line":121,"column":21}},"line":119},"18":{"name":"(anonymous_18)","decl":{"start":{"line":123,"column":41},"end":{"line":123,"column":42}},"loc":{"start":{"line":123,"column":53},"end":{"line":129,"column":17}},"line":123},"19":{"name":"(anonymous_19)","decl":{"start":{"line":126,"column":31},"end":{"line":126,"column":32}},"loc":{"start":{"line":126,"column":42},"end":{"line":128,"column":21}},"line":126},"20":{"name":"(anonymous_20)","decl":{"start":{"line":131,"column":61},"end":{"line":131,"column":62}},"loc":{"start":{"line":131,"column":67},"end":{"line":142,"column":13}},"line":131},"21":{"name":"(anonymous_21)","decl":{"start":{"line":132,"column":41},"end":{"line":132,"column":42}},"loc":{"start":{"line":132,"column":53},"end":{"line":136,"column":17}},"line":132},"22":{"name":"(anonymous_22)","decl":{"start":{"line":133,"column":104},"end":{"line":133,"column":105}},"loc":{"start":{"line":133,"column":115},"end":{"line":135,"column":21}},"line":133},"23":{"name":"(anonymous_23)","decl":{"start":{"line":137,"column":41},"end":{"line":137,"column":42}},"loc":{"start":{"line":137,"column":53},"end":{"line":141,"column":17}},"line":137},"24":{"name":"(anonymous_24)","decl":{"start":{"line":138,"column":104},"end":{"line":138,"column":105}},"loc":{"start":{"line":138,"column":115},"end":{"line":140,"column":21}},"line":138},"25":{"name":"(anonymous_25)","decl":{"start":{"line":143,"column":144},"end":{"line":143,"column":145}},"loc":{"start":{"line":143,"column":150},"end":{"line":151,"column":13}},"line":143},"26":{"name":"(anonymous_26)","decl":{"start":{"line":144,"column":41},"end":{"line":144,"column":42}},"loc":{"start":{"line":144,"column":53},"end":{"line":150,"column":17}},"line":144},"27":{"name":"(anonymous_27)","decl":{"start":{"line":147,"column":31},"end":{"line":147,"column":32}},"loc":{"start":{"line":147,"column":42},"end":{"line":149,"column":21}},"line":147},"28":{"name":"(anonymous_28)","decl":{"start":{"line":152,"column":55},"end":{"line":152,"column":56}},"loc":{"start":{"line":152,"column":61},"end":{"line":173,"column":13}},"line":152},"29":{"name":"(anonymous_29)","decl":{"start":{"line":153,"column":41},"end":{"line":153,"column":42}},"loc":{"start":{"line":153,"column":53},"end":{"line":162,"column":17}},"line":153},"30":{"name":"(anonymous_30)","decl":{"start":{"line":159,"column":31},"end":{"line":159,"column":32}},"loc":{"start":{"line":159,"column":42},"end":{"line":161,"column":21}},"line":159},"31":{"name":"(anonymous_31)","decl":{"start":{"line":163,"column":41},"end":{"line":163,"column":42}},"loc":{"start":{"line":163,"column":53},"end":{"line":172,"column":17}},"line":163},"32":{"name":"(anonymous_32)","decl":{"start":{"line":169,"column":31},"end":{"line":169,"column":32}},"loc":{"start":{"line":169,"column":42},"end":{"line":171,"column":21}},"line":169},"33":{"name":"(anonymous_33)","decl":{"start":{"line":176,"column":36},"end":{"line":176,"column":37}},"loc":{"start":{"line":176,"column":42},"end":{"line":189,"column":5}},"line":176},"34":{"name":"(anonymous_34)","decl":{"start":{"line":177,"column":41},"end":{"line":177,"column":42}},"loc":{"start":{"line":177,"column":47},"end":{"line":188,"column":9}},"line":177},"35":{"name":"(anonymous_35)","decl":{"start":{"line":178,"column":59},"end":{"line":178,"column":60}},"loc":{"start":{"line":178,"column":71},"end":{"line":182,"column":13}},"line":178},"36":{"name":"(anonymous_36)","decl":{"start":{"line":183,"column":54},"end":{"line":183,"column":55}},"loc":{"start":{"line":183,"column":66},"end":{"line":187,"column":13}},"line":183},"37":{"name":"(anonymous_37)","decl":{"start":{"line":190,"column":51},"end":{"line":190,"column":52}},"loc":{"start":{"line":190,"column":57},"end":{"line":269,"column":5}},"line":190},"38":{"name":"(anonymous_38)","decl":{"start":{"line":191,"column":49},"end":{"line":191,"column":50}},"loc":{"start":{"line":191,"column":55},"end":{"line":197,"column":9}},"line":191},"39":{"name":"(anonymous_39)","decl":{"start":{"line":192,"column":72},"end":{"line":192,"column":73}},"loc":{"start":{"line":192,"column":84},"end":{"line":196,"column":13}},"line":192},"40":{"name":"(anonymous_40)","decl":{"start":{"line":198,"column":54},"end":{"line":198,"column":55}},"loc":{"start":{"line":198,"column":60},"end":{"line":268,"column":9}},"line":198},"41":{"name":"(anonymous_41)","decl":{"start":{"line":199,"column":36},"end":{"line":199,"column":37}},"loc":{"start":{"line":199,"column":42},"end":{"line":228,"column":13}},"line":199},"42":{"name":"(anonymous_42)","decl":{"start":{"line":200,"column":76},"end":{"line":200,"column":77}},"loc":{"start":{"line":200,"column":88},"end":{"line":204,"column":17}},"line":200},"43":{"name":"(anonymous_43)","decl":{"start":{"line":205,"column":76},"end":{"line":205,"column":77}},"loc":{"start":{"line":205,"column":88},"end":{"line":211,"column":17}},"line":205},"44":{"name":"(anonymous_44)","decl":{"start":{"line":212,"column":56},"end":{"line":212,"column":57}},"loc":{"start":{"line":212,"column":62},"end":{"line":218,"column":17}},"line":212},"45":{"name":"(anonymous_45)","decl":{"start":{"line":213,"column":72},"end":{"line":213,"column":73}},"loc":{"start":{"line":213,"column":84},"end":{"line":217,"column":21}},"line":213},"46":{"name":"(anonymous_46)","decl":{"start":{"line":219,"column":57},"end":{"line":219,"column":58}},"loc":{"start":{"line":219,"column":63},"end":{"line":227,"column":17}},"line":219},"47":{"name":"(anonymous_47)","decl":{"start":{"line":220,"column":73},"end":{"line":220,"column":74}},"loc":{"start":{"line":220,"column":85},"end":{"line":226,"column":21}},"line":220},"48":{"name":"(anonymous_48)","decl":{"start":{"line":229,"column":38},"end":{"line":229,"column":39}},"loc":{"start":{"line":229,"column":44},"end":{"line":267,"column":13}},"line":229},"49":{"name":"(anonymous_49)","decl":{"start":{"line":230,"column":65},"end":{"line":230,"column":66}},"loc":{"start":{"line":230,"column":71},"end":{"line":238,"column":17}},"line":230},"50":{"name":"(anonymous_50)","decl":{"start":{"line":231,"column":45},"end":{"line":231,"column":46}},"loc":{"start":{"line":231,"column":57},"end":{"line":237,"column":21}},"line":231},"51":{"name":"(anonymous_51)","decl":{"start":{"line":234,"column":35},"end":{"line":234,"column":36}},"loc":{"start":{"line":234,"column":46},"end":{"line":236,"column":25}},"line":234},"52":{"name":"(anonymous_52)","decl":{"start":{"line":239,"column":65},"end":{"line":239,"column":66}},"loc":{"start":{"line":239,"column":71},"end":{"line":245,"column":17}},"line":239},"53":{"name":"(anonymous_53)","decl":{"start":{"line":240,"column":45},"end":{"line":240,"column":46}},"loc":{"start":{"line":240,"column":57},"end":{"line":244,"column":21}},"line":240},"54":{"name":"(anonymous_54)","decl":{"start":{"line":241,"column":116},"end":{"line":241,"column":117}},"loc":{"start":{"line":241,"column":127},"end":{"line":243,"column":25}},"line":241},"55":{"name":"(anonymous_55)","decl":{"start":{"line":246,"column":148},"end":{"line":246,"column":149}},"loc":{"start":{"line":246,"column":154},"end":{"line":254,"column":17}},"line":246},"56":{"name":"(anonymous_56)","decl":{"start":{"line":247,"column":45},"end":{"line":247,"column":46}},"loc":{"start":{"line":247,"column":57},"end":{"line":253,"column":21}},"line":247},"57":{"name":"(anonymous_57)","decl":{"start":{"line":250,"column":35},"end":{"line":250,"column":36}},"loc":{"start":{"line":250,"column":46},"end":{"line":252,"column":25}},"line":250},"58":{"name":"(anonymous_58)","decl":{"start":{"line":255,"column":59},"end":{"line":255,"column":60}},"loc":{"start":{"line":255,"column":65},"end":{"line":266,"column":17}},"line":255},"59":{"name":"(anonymous_59)","decl":{"start":{"line":256,"column":45},"end":{"line":256,"column":46}},"loc":{"start":{"line":256,"column":57},"end":{"line":265,"column":21}},"line":256},"60":{"name":"(anonymous_60)","decl":{"start":{"line":262,"column":35},"end":{"line":262,"column":36}},"loc":{"start":{"line":262,"column":46},"end":{"line":264,"column":25}},"line":262},"61":{"name":"(anonymous_61)","decl":{"start":{"line":270,"column":30},"end":{"line":270,"column":31}},"loc":{"start":{"line":270,"column":36},"end":{"line":287,"column":5}},"line":270},"62":{"name":"(anonymous_62)","decl":{"start":{"line":271,"column":41},"end":{"line":271,"column":42}},"loc":{"start":{"line":271,"column":47},"end":{"line":277,"column":9}},"line":271},"63":{"name":"(anonymous_63)","decl":{"start":{"line":272,"column":55},"end":{"line":272,"column":56}},"loc":{"start":{"line":272,"column":67},"end":{"line":276,"column":13}},"line":272},"64":{"name":"(anonymous_64)","decl":{"start":{"line":278,"column":34},"end":{"line":278,"column":35}},"loc":{"start":{"line":278,"column":40},"end":{"line":286,"column":9}},"line":278},"65":{"name":"(anonymous_65)","decl":{"start":{"line":279,"column":36},"end":{"line":279,"column":37}},"loc":{"start":{"line":279,"column":42},"end":{"line":285,"column":13}},"line":279},"66":{"name":"(anonymous_66)","decl":{"start":{"line":280,"column":46},"end":{"line":280,"column":47}},"loc":{"start":{"line":280,"column":58},"end":{"line":284,"column":17}},"line":280},"67":{"name":"(anonymous_67)","decl":{"start":{"line":288,"column":49},"end":{"line":288,"column":50}},"loc":{"start":{"line":288,"column":55},"end":{"line":348,"column":5}},"line":288},"68":{"name":"(anonymous_68)","decl":{"start":{"line":289,"column":54},"end":{"line":289,"column":55}},"loc":{"start":{"line":289,"column":60},"end":{"line":347,"column":9}},"line":289},"69":{"name":"(anonymous_69)","decl":{"start":{"line":290,"column":36},"end":{"line":290,"column":37}},"loc":{"start":{"line":290,"column":42},"end":{"line":307,"column":13}},"line":290},"70":{"name":"(anonymous_70)","decl":{"start":{"line":291,"column":69},"end":{"line":291,"column":70}},"loc":{"start":{"line":291,"column":81},"end":{"line":294,"column":17}},"line":291},"71":{"name":"(anonymous_71)","decl":{"start":{"line":295,"column":70},"end":{"line":295,"column":71}},"loc":{"start":{"line":295,"column":82},"end":{"line":300,"column":17}},"line":295},"72":{"name":"(anonymous_72)","decl":{"start":{"line":301,"column":71},"end":{"line":301,"column":72}},"loc":{"start":{"line":301,"column":83},"end":{"line":306,"column":17}},"line":301},"73":{"name":"(anonymous_73)","decl":{"start":{"line":308,"column":38},"end":{"line":308,"column":39}},"loc":{"start":{"line":308,"column":44},"end":{"line":346,"column":13}},"line":308},"74":{"name":"(anonymous_74)","decl":{"start":{"line":309,"column":65},"end":{"line":309,"column":66}},"loc":{"start":{"line":309,"column":71},"end":{"line":317,"column":17}},"line":309},"75":{"name":"(anonymous_75)","decl":{"start":{"line":310,"column":45},"end":{"line":310,"column":46}},"loc":{"start":{"line":310,"column":57},"end":{"line":316,"column":21}},"line":310},"76":{"name":"(anonymous_76)","decl":{"start":{"line":313,"column":35},"end":{"line":313,"column":36}},"loc":{"start":{"line":313,"column":46},"end":{"line":315,"column":25}},"line":313},"77":{"name":"(anonymous_77)","decl":{"start":{"line":318,"column":65},"end":{"line":318,"column":66}},"loc":{"start":{"line":318,"column":71},"end":{"line":324,"column":17}},"line":318},"78":{"name":"(anonymous_78)","decl":{"start":{"line":319,"column":45},"end":{"line":319,"column":46}},"loc":{"start":{"line":319,"column":57},"end":{"line":323,"column":21}},"line":319},"79":{"name":"(anonymous_79)","decl":{"start":{"line":320,"column":116},"end":{"line":320,"column":117}},"loc":{"start":{"line":320,"column":127},"end":{"line":322,"column":25}},"line":320},"80":{"name":"(anonymous_80)","decl":{"start":{"line":325,"column":148},"end":{"line":325,"column":149}},"loc":{"start":{"line":325,"column":154},"end":{"line":333,"column":17}},"line":325},"81":{"name":"(anonymous_81)","decl":{"start":{"line":326,"column":45},"end":{"line":326,"column":46}},"loc":{"start":{"line":326,"column":57},"end":{"line":332,"column":21}},"line":326},"82":{"name":"(anonymous_82)","decl":{"start":{"line":329,"column":35},"end":{"line":329,"column":36}},"loc":{"start":{"line":329,"column":46},"end":{"line":331,"column":25}},"line":329},"83":{"name":"(anonymous_83)","decl":{"start":{"line":334,"column":59},"end":{"line":334,"column":60}},"loc":{"start":{"line":334,"column":65},"end":{"line":345,"column":17}},"line":334},"84":{"name":"(anonymous_84)","decl":{"start":{"line":335,"column":45},"end":{"line":335,"column":46}},"loc":{"start":{"line":335,"column":57},"end":{"line":344,"column":21}},"line":335},"85":{"name":"(anonymous_85)","decl":{"start":{"line":341,"column":35},"end":{"line":341,"column":36}},"loc":{"start":{"line":341,"column":46},"end":{"line":343,"column":25}},"line":341}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":3,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":13,"19":13,"20":13,"21":46,"22":13,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":31,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"59":1,"60":1,"61":1,"62":1,"63":1,"64":1,"65":1,"66":1,"67":1,"68":1,"69":1,"70":1,"71":1,"72":1,"73":1,"74":1,"75":1,"76":1,"77":1,"78":1,"79":1,"80":1,"81":1,"82":1,"83":1,"84":1,"85":1,"86":1,"87":1,"88":1,"89":1,"90":1,"91":1,"92":1,"93":1,"94":1,"95":1,"96":1,"97":1,"98":1,"99":1,"100":1,"101":1,"102":1,"103":1,"104":1,"105":1,"106":1,"107":1,"108":1,"109":1,"110":1,"111":1,"112":1,"113":1,"114":1,"115":1,"116":1,"117":1,"118":1,"119":1,"120":1,"121":1,"122":1,"123":1,"124":1,"125":1,"126":1,"127":1,"128":1,"129":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"136":1,"137":1,"138":1,"139":1,"140":1,"141":1,"142":1,"143":1,"144":1,"145":1,"146":1,"147":1,"148":1,"149":1,"150":1,"151":1,"152":1,"153":1,"154":1,"155":1,"156":1,"157":1,"158":1,"159":1,"160":1,"161":1,"162":1,"163":1,"164":1,"165":1,"166":1,"167":1,"168":1,"169":1,"170":1,"171":1,"172":1,"173":1,"174":1,"175":1,"176":1,"177":1},"f":{"0":3,"1":1,"2":13,"3":1,"4":31,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"59":1,"60":1,"61":1,"62":1,"63":1,"64":1,"65":1,"66":1,"67":1,"68":1,"69":1,"70":1,"71":1,"72":1,"73":1,"74":1,"75":1,"76":1,"77":1,"78":1,"79":1,"80":1,"81":1,"82":1,"83":1,"84":1,"85":1},"b":{"0":[1,1,1],"1":[0,3],"2":[3,3]},"inputSourceMap":{"version":3,"file":"/home/illya/work/maester-client/spec/ObjectStorageWrapper.spec.ts","sources":["/home/illya/work/maester-client/spec/ObjectStorageWrapper.spec.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable max-len */\nimport 'mocha';\nimport { getLogger } from '@elastic.io/component-commons-library/lib/logger/logger';\nimport chai from 'chai';\nimport nock from 'nock';\nimport sinon from 'sinon';\nimport { ObjectStorageWrapper, MAESTER_MAX_SUPPORTED_COUNT_OF_QUERY_HEADERS } from '../src/ObjectStorageWrapper';\n\nconst { expect } = chai;\n\nprocess.env.ELASTICIO_OBJECT_STORAGE_TOKEN =\n  'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0ZW5hbnRJZCI6IjU2YzIwN2FkYjkxMjExODFlNjUwYzBlZiIsImNvbnRyYWN0SWQiOiI1YjVlZDFjZjI3MmNmODAwMTFhZTdiNmEiLCJ3b3Jrc3BhY2VJZCI6IjVhNzFiZmM1NjA3ZjFiMDAwNzI5OGEyYSIsImZsb3dJZCI6IioiLCJ1c2VySWQiOiI1YjE2NGRiMzRkNTlhODAwMDdiZDQ3OTMiLCJpYXQiOjE1ODg1ODg3NjZ9.3GlJAwHz__e2Y5tgkzD1t-JyhgXGJOSVFSLUBCqLh5Y';\nprocess.env.ELASTICIO_WORKSPACE_ID = 'test';\nprocess.env.ELASTICIO_FLOW_ID = 'test';\nprocess.env.ELASTICIO_API_URI = 'https://api.hostname';\nprocess.env.ELASTICIO_OBJECT_STORAGE_URI = 'https://ma.estr';\nprocess.env.ELASTICIO_STEP_ID = 'step_id';\n\nlet context: any;\nlet objectStorageWrapper: any;\n\ndescribe('ObjectStorageWrapper', () => {\n  const genHeaders = (amount: number) => {\n    const resultHeaders = [];\n    for (let i = 0; i < amount; i++) {\n      resultHeaders.push({ key: `key${i}`, value: `value${i}` });\n    }\n    return resultHeaders;\n  };\n  const data = {\n    foo: 'bar',\n  };\n  const updatedData = {\n    foo: 'bar',\n    bap: 'baz',\n  };\n  const rawData = '{\"foo\":\"bar\"}';\n  const queryKey = 'baz';\n  const queryValue = 'bap';\n  const ttl = -1;\n  const id = 'id123';\n  const maesterUri = 'https://ma.estr';\n  const createObjectWithQueriableField = {\n    contentType: 'application/json',\n    createdAt: 1622811501107,\n    objectId: '2bd48165-119f-489d-8842-8d07b2c7cc1b',\n    metadata: {},\n    queriableFields: {\n      demosearchfield: 'qwerty',\n    },\n  };\n  const anotherCreateObjectWithQueriableField = {\n    contentType: 'application/json',\n    createdAt: 1622811501108,\n    objectId: '78asdas87-ss77-77ss-7888-8d07b2c7cc2a',\n    metadata: {},\n    queriableFields: {\n      demosearchfield: 'qwerty',\n    },\n  };\n\n  before(async () => {\n    context = {\n      logger: getLogger(),\n      emit: sinon.spy(),\n    };\n    objectStorageWrapper = new ObjectStorageWrapper(context);\n  });\n\n  beforeEach(async () => {\n    context.emit.resetHistory();\n  });\n\n  after(() => {\n    nock.restore();\n    nock.cleanAll();\n    nock.activate();\n  });\n\n  describe('Create object', () => {\n    describe('valid inputs', () => {\n      describe('With queriable and meta fields', () => {\n        it('Should save the data correctly', async () => {\n          nock(maesterUri)\n            .post('/objects')\n            .matchHeader('x-query-key0', 'value0')\n            .matchHeader('x-eio-ttl', '-1')\n            .reply(201, createObjectWithQueriableField);\n          await objectStorageWrapper.createObject(data, genHeaders(1), [], ttl);\n        });\n        it('Should save the data correctly', async () => {\n          nock(maesterUri)\n            .post('/objects')\n            .matchHeader('x-query-key0', 'value0')\n            .matchHeader('x-query-key1', 'value1')\n            .matchHeader('x-query-key2', 'value2')\n            .matchHeader('x-query-key3', 'value3')\n            .matchHeader('x-query-key4', 'value4')\n            .matchHeader('x-meta-key0', 'value0')\n            .matchHeader('x-meta-key1', 'value1')\n            .matchHeader('x-eio-ttl', '-1')\n            .reply(201, createObjectWithQueriableField);\n          await objectStorageWrapper.createObject(data, genHeaders(MAESTER_MAX_SUPPORTED_COUNT_OF_QUERY_HEADERS), genHeaders(2), ttl);\n        });\n      });\n      describe('Without queriable fields', () => {\n        it('Should save the data correctly', async () => {\n          nock(maesterUri).post('/objects').matchHeader('x-eio-ttl', '-1').reply(201, createObjectWithQueriableField);\n          await objectStorageWrapper.createObject(data, [], [], ttl);\n        });\n        it('Should save the data correctly', async () => {\n          nock(maesterUri).post('/objects').reply(201, createObjectWithQueriableField);\n          await objectStorageWrapper.createObject(data);\n        });\n      });\n    });\n    describe('invalid inputs', () => {\n      describe('Query key set, query value undefined', () => {\n        it('Should throw error', async () => {\n          await objectStorageWrapper\n            .createObject(data, [{ key: 'key0', value: 'value0' }, { key: 'key1' }], [], ttl)\n            .catch((error: { message: any }) => {\n              expect(error.message).to.equal('header \"value\" is mandatory if header \"key\" passed');\n            });\n        });\n        it('Should throw error', async () => {\n          await objectStorageWrapper\n            .createObject(data, [], [{ key: 'key0', value: 'value0' }, { key: 'key1' }], ttl)\n            .catch((error: { message: any }) => {\n              expect(error.message).to.equal('header \"value\" is mandatory if header \"key\" passed');\n            });\n        });\n      });\n      describe('Query value set, query key undefined', () => {\n        it('Should throw error', async () => {\n          await objectStorageWrapper.createObject(data, [{ value: 'value1' }], [], ttl).catch((error: { message: any }) => {\n            expect(error.message).to.equal('header \"key\" is mandatory if header \"value\" passed');\n          });\n        });\n        it('Should throw error', async () => {\n          await objectStorageWrapper.createObject(data, [], [{ value: 'value1' }], ttl).catch((error: { message: any }) => {\n            expect(error.message).to.equal('header \"key\" is mandatory if header \"value\" passed');\n          });\n        });\n      });\n      describe(`Maester headers maximum amount is exceed (${MAESTER_MAX_SUPPORTED_COUNT_OF_QUERY_HEADERS} items)`, () => {\n        it('Should throw error', async () => {\n          await objectStorageWrapper\n            .createObject(data, genHeaders(MAESTER_MAX_SUPPORTED_COUNT_OF_QUERY_HEADERS + 1), [], ttl)\n            .catch((error: { message: any }) => {\n              expect(error.message).to.equal(`maximum available amount of headers is ${MAESTER_MAX_SUPPORTED_COUNT_OF_QUERY_HEADERS}`);\n            });\n        });\n      });\n      describe('Header used more than one time', () => {\n        it('Should throw error', async () => {\n          await objectStorageWrapper\n            .createObject(\n              data,\n              [\n                { key: 'key0', value: 'value0' },\n                { key: 'key0', value: 'value0' },\n              ],\n              [],\n              ttl,\n            )\n            .catch((error: { message: any }) => {\n              expect(error.message).to.equal('header key \"key0\" was already added');\n            });\n        });\n        it('Should throw error', async () => {\n          await objectStorageWrapper\n            .createObject(\n              data,\n              [],\n              [\n                { key: 'key0', value: 'value0' },\n                { key: 'key0', value: 'value0' },\n              ],\n              ttl,\n            )\n            .catch((error: { message: any }) => {\n              expect(error.message).to.equal('header key \"key0\" was already added');\n            });\n        });\n      });\n    });\n  });\n  describe('Lookup object by ID', () => {\n    describe('Lookup with valid ID', () => {\n      it('Should successfully return a JSON object', async () => {\n        nock(maesterUri).get(`/objects/${id}`).reply(200, data);\n        const result = await objectStorageWrapper.lookupObjectById(id);\n        expect(result).to.deep.equal(rawData);\n      });\n      it('Should successfully return a string', async () => {\n        nock(maesterUri).get(`/objects/${id}`).reply(200, rawData);\n        const result = await objectStorageWrapper.lookupObjectById(id);\n        expect(result).to.deep.equal(rawData);\n      });\n    });\n  });\n  describe('Lookup objects by query parameters', () => {\n    describe('Objects not found in Maester', () => {\n      it('Should successfully return an empty stringified array', async () => {\n        nock(maesterUri).get(`/objects?query[${queryKey}]=${queryValue}`).reply(200, []);\n        const result = await objectStorageWrapper.lookupObjectsByQueryParameters([{ key: queryKey, value: queryValue }]);\n        expect(result).to.deep.equal([]);\n      });\n    });\n    describe('Different amount of search params', () => {\n      describe('valid input', () => {\n        it('Should successfully return an empty stringified array', async () => {\n          nock(maesterUri).get('/objects?query[key0]=value0').reply(200, []);\n          const result = await objectStorageWrapper.lookupObjectsByQueryParameters(genHeaders(1));\n          expect(result).to.deep.equal([]);\n        });\n        it('Should successfully return an empty stringified array', async () => {\n          nock(maesterUri)\n            .get('/objects?query[key0]=value0&query[key1]=value1&query[key2]=value2&query[key3]=value3&query[key4]=value4')\n            .reply(200, []);\n          const result = await objectStorageWrapper.lookupObjectsByQueryParameters(genHeaders(5));\n          expect(result).to.deep.equal([]);\n        });\n        describe('One object found in Maester', () => {\n          it('Should return a stringified array of 1 object', async () => {\n            nock(maesterUri).get('/objects?query[key0]=value0&query[key1]=value1').reply(200, [createObjectWithQueriableField]);\n            const result = await objectStorageWrapper.lookupObjectsByQueryParameters(genHeaders(2));\n            expect(result).to.deep.equal([createObjectWithQueriableField]);\n          });\n        });\n        describe('Two objects found in Maester', () => {\n          it('Should return a stringified array of 2 objects', async () => {\n            nock(maesterUri)\n              .get('/objects?query[key0]=value0&query[key1]=value1&query[key2]=value2')\n              .reply(200, [createObjectWithQueriableField, anotherCreateObjectWithQueriableField]);\n            const result = await objectStorageWrapper.lookupObjectsByQueryParameters(genHeaders(3));\n            expect(result).to.deep.equal([createObjectWithQueriableField, anotherCreateObjectWithQueriableField]);\n          });\n        });\n      });\n      describe('invalid input', () => {\n        describe('Query key set, query value undefined', () => {\n          it('Should throw error', async () => {\n            await objectStorageWrapper\n              .lookupObjectsByQueryParameters([{ key: 'key0', value: 'value0' }, { key: 'key1' }], ttl)\n              .catch((error: { message: any }) => {\n                expect(error.message).to.equal('header \"value\" is mandatory if header \"key\" passed');\n              });\n          });\n        });\n        describe('Query value set, query key undefined', () => {\n          it('Should throw error', async () => {\n            await objectStorageWrapper.lookupObjectsByQueryParameters([{ value: 'value1' }], ttl).catch((error: { message: any }) => {\n              expect(error.message).to.equal('header \"key\" is mandatory if header \"value\" passed');\n            });\n          });\n        });\n        describe(`Maester headers maximum amount is exceed (${MAESTER_MAX_SUPPORTED_COUNT_OF_QUERY_HEADERS} items)`, () => {\n          it('Should throw error', async () => {\n            await objectStorageWrapper\n              .lookupObjectsByQueryParameters(genHeaders(MAESTER_MAX_SUPPORTED_COUNT_OF_QUERY_HEADERS + 1), ttl)\n              .catch((error: { message: any }) => {\n                expect(error.message).to.equal(`maximum available amount of headers is ${MAESTER_MAX_SUPPORTED_COUNT_OF_QUERY_HEADERS}`);\n              });\n          });\n        });\n        describe('Header used more than one time', () => {\n          it('Should throw error', async () => {\n            await objectStorageWrapper\n              .lookupObjectsByQueryParameters(\n                [\n                  { key: 'key0', value: 'value0' },\n                  { key: 'key0', value: 'value0' },\n                ],\n                ttl,\n              )\n              .catch((error: { message: any }) => {\n                expect(error.message).to.equal('header key \"key0\" was already added');\n              });\n          });\n        });\n      });\n    });\n  });\n  describe('Update object', () => {\n    describe('Valid update request', () => {\n      it('Should successfully update an object', async () => {\n        nock(maesterUri).put(`/objects/${id}`).reply(200, updatedData);\n        const result = await objectStorageWrapper.updateObject(id, updatedData);\n        expect(result).to.deep.equal(updatedData);\n      });\n    });\n    describe('Delete object', () => {\n      describe('ID is valid', () => {\n        it('Should delete an object', async () => {\n          nock(maesterUri).delete(`/objects/${id}`).reply(204);\n          const result = await objectStorageWrapper.deleteObjectById(id);\n          expect(result).to.equal('');\n        });\n      });\n    });\n  });\n  describe('Delete object by query parameter', () => {\n    describe('Different amount of search params', () => {\n      describe('valid input', () => {\n        it('Should successfully delete objects (one param)', async () => {\n          nock(maesterUri).delete('/objects?query[key0]=value0').reply(200);\n          await objectStorageWrapper.deleteObjectsByQueryParameters(genHeaders(1));\n        });\n        it('Should successfully delete objects (two params)', async () => {\n          nock(maesterUri)\n            .delete('/objects?query[key0]=value0&query[key1]=value1&query[key2]=value2')\n            .reply(200, [createObjectWithQueriableField, anotherCreateObjectWithQueriableField]);\n          await objectStorageWrapper.deleteObjectsByQueryParameters(genHeaders(3));\n        });\n        it('Should successfully delete objects (five params)', async () => {\n          nock(maesterUri)\n            .delete('/objects?query[key0]=value0&query[key1]=value1&query[key2]=value2&query[key3]=value3&query[key4]=value4')\n            .reply(200, []);\n          await objectStorageWrapper.deleteObjectsByQueryParameters(genHeaders(5));\n        });\n      });\n      describe('invalid input', () => {\n        describe('Query key set, query value undefined', () => {\n          it('Should throw error', async () => {\n            await objectStorageWrapper\n              .deleteObjectsByQueryParameters([{ key: 'key0', value: 'value0' }, { key: 'key1' }], ttl)\n              .catch((error: { message: any }) => {\n                expect(error.message).to.equal('header \"value\" is mandatory if header \"key\" passed');\n              });\n          });\n        });\n        describe('Query value set, query key undefined', () => {\n          it('Should throw error', async () => {\n            await objectStorageWrapper.deleteObjectsByQueryParameters([{ value: 'value1' }], ttl).catch((error: { message: any }) => {\n              expect(error.message).to.equal('header \"key\" is mandatory if header \"value\" passed');\n            });\n          });\n        });\n        describe(`Maester headers maximum amount is exceed (${MAESTER_MAX_SUPPORTED_COUNT_OF_QUERY_HEADERS} items)`, () => {\n          it('Should throw error', async () => {\n            await objectStorageWrapper\n              .deleteObjectsByQueryParameters(genHeaders(MAESTER_MAX_SUPPORTED_COUNT_OF_QUERY_HEADERS + 1), ttl)\n              .catch((error: { message: any }) => {\n                expect(error.message).to.equal(`maximum available amount of headers is ${MAESTER_MAX_SUPPORTED_COUNT_OF_QUERY_HEADERS}`);\n              });\n          });\n        });\n        describe('Header used more than one time', () => {\n          it('Should throw error', async () => {\n            await objectStorageWrapper\n              .deleteObjectsByQueryParameters(\n                [\n                  { key: 'key0', value: 'value0' },\n                  { key: 'key0', value: 'value0' },\n                ],\n                ttl,\n              )\n              .catch((error: { message: any }) => {\n                expect(error.message).to.equal('header key \"key0\" was already added');\n              });\n          });\n        });\n      });\n    });\n  });\n});\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"1584d530e1fd7e2cfb1d490d85beb8c9eb7c63b9","contentHash":"cca1367b69b613cfb3ecd46623da81201c6d1884217a14695e9f964694c0aabb"},"/home/illya/work/maester-client/src/ObjectStorageWrapper.ts":{"path":"/home/illya/work/maester-client/src/ObjectStorageWrapper.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":24},"end":{"line":6,"column":67}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":57}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":33}},"6":{"start":{"line":11,"column":8},"end":{"line":11,"column":37}},"7":{"start":{"line":12,"column":8},"end":{"line":14,"column":9}},"8":{"start":{"line":13,"column":12},"end":{"line":13,"column":111}},"9":{"start":{"line":15,"column":8},"end":{"line":15,"column":64}},"10":{"start":{"line":16,"column":8},"end":{"line":16,"column":60}},"11":{"start":{"line":17,"column":8},"end":{"line":17,"column":99}},"12":{"start":{"line":20,"column":8},"end":{"line":20,"column":58}},"13":{"start":{"line":21,"column":8},"end":{"line":21,"column":64}},"14":{"start":{"line":22,"column":8},"end":{"line":22,"column":62}},"15":{"start":{"line":23,"column":30},"end":{"line":23,"column":180}},"16":{"start":{"line":24,"column":8},"end":{"line":25,"column":63}},"17":{"start":{"line":25,"column":12},"end":{"line":25,"column":63}},"18":{"start":{"line":26,"column":8},"end":{"line":26,"column":66}},"19":{"start":{"line":29,"column":8},"end":{"line":29,"column":72}},"20":{"start":{"line":30,"column":8},"end":{"line":30,"column":48}},"21":{"start":{"line":33,"column":8},"end":{"line":33,"column":76}},"22":{"start":{"line":34,"column":8},"end":{"line":34,"column":59}},"23":{"start":{"line":35,"column":29},"end":{"line":35,"column":73}},"24":{"start":{"line":36,"column":8},"end":{"line":36,"column":59}},"25":{"start":{"line":39,"column":8},"end":{"line":39,"column":68}},"26":{"start":{"line":40,"column":8},"end":{"line":40,"column":46}},"27":{"start":{"line":43,"column":8},"end":{"line":43,"column":73}},"28":{"start":{"line":44,"column":8},"end":{"line":44,"column":59}},"29":{"start":{"line":45,"column":29},"end":{"line":45,"column":73}},"30":{"start":{"line":46,"column":23},"end":{"line":46,"column":76}},"31":{"start":{"line":47,"column":8},"end":{"line":47,"column":93}},"32":{"start":{"line":48,"column":8},"end":{"line":48,"column":54}},"33":{"start":{"line":51,"column":8},"end":{"line":51,"column":73}},"34":{"start":{"line":52,"column":8},"end":{"line":52,"column":54}},"35":{"start":{"line":55,"column":8},"end":{"line":56,"column":19}},"36":{"start":{"line":56,"column":12},"end":{"line":56,"column":19}},"37":{"start":{"line":57,"column":8},"end":{"line":59,"column":9}},"38":{"start":{"line":58,"column":12},"end":{"line":58,"column":126}},"39":{"start":{"line":60,"column":8},"end":{"line":60,"column":60}},"40":{"start":{"line":63,"column":8},"end":{"line":63,"column":60}},"41":{"start":{"line":66,"column":8},"end":{"line":67,"column":19}},"42":{"start":{"line":67,"column":12},"end":{"line":67,"column":19}},"43":{"start":{"line":69,"column":8},"end":{"line":74,"column":9}},"44":{"start":{"line":70,"column":12},"end":{"line":71,"column":86}},"45":{"start":{"line":71,"column":16},"end":{"line":71,"column":86}},"46":{"start":{"line":72,"column":12},"end":{"line":73,"column":86}},"47":{"start":{"line":73,"column":16},"end":{"line":73,"column":86}},"48":{"start":{"line":77,"column":30},"end":{"line":77,"column":32}},"49":{"start":{"line":78,"column":8},"end":{"line":79,"column":19}},"50":{"start":{"line":79,"column":12},"end":{"line":79,"column":19}},"51":{"start":{"line":81,"column":8},"end":{"line":86,"column":9}},"52":{"start":{"line":82,"column":27},"end":{"line":82,"column":51}},"53":{"start":{"line":83,"column":12},"end":{"line":84,"column":73}},"54":{"start":{"line":84,"column":16},"end":{"line":84,"column":73}},"55":{"start":{"line":85,"column":12},"end":{"line":85,"column":42}},"56":{"start":{"line":88,"column":8},"end":{"line":88,"column":29}},"57":{"start":{"line":91,"column":8},"end":{"line":92,"column":22}},"58":{"start":{"line":92,"column":12},"end":{"line":92,"column":22}},"59":{"start":{"line":93,"column":29},"end":{"line":93,"column":31}},"60":{"start":{"line":95,"column":8},"end":{"line":100,"column":9}},"61":{"start":{"line":96,"column":29},"end":{"line":96,"column":44}},"62":{"start":{"line":97,"column":12},"end":{"line":98,"column":73}},"63":{"start":{"line":98,"column":16},"end":{"line":98,"column":73}},"64":{"start":{"line":99,"column":12},"end":{"line":99,"column":43}},"65":{"start":{"line":101,"column":8},"end":{"line":101,"column":28}},"66":{"start":{"line":105,"column":8},"end":{"line":110,"column":9}},"67":{"start":{"line":106,"column":12},"end":{"line":106,"column":44}},"68":{"start":{"line":109,"column":12},"end":{"line":109,"column":89}},"69":{"start":{"line":111,"column":8},"end":{"line":111,"column":26}},"70":{"start":{"line":114,"column":0},"end":{"line":114,"column":52}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":4},"end":{"line":10,"column":5}},"loc":{"start":{"line":10,"column":25},"end":{"line":18,"column":5}},"line":10},"2":{"name":"(anonymous_2)","decl":{"start":{"line":19,"column":4},"end":{"line":19,"column":5}},"loc":{"start":{"line":19,"column":61},"end":{"line":27,"column":5}},"line":19},"3":{"name":"(anonymous_3)","decl":{"start":{"line":28,"column":4},"end":{"line":28,"column":5}},"loc":{"start":{"line":28,"column":31},"end":{"line":31,"column":5}},"line":28},"4":{"name":"(anonymous_4)","decl":{"start":{"line":32,"column":4},"end":{"line":32,"column":5}},"loc":{"start":{"line":32,"column":50},"end":{"line":37,"column":5}},"line":32},"5":{"name":"(anonymous_5)","decl":{"start":{"line":38,"column":4},"end":{"line":38,"column":5}},"loc":{"start":{"line":38,"column":31},"end":{"line":41,"column":5}},"line":38},"6":{"name":"(anonymous_6)","decl":{"start":{"line":42,"column":4},"end":{"line":42,"column":5}},"loc":{"start":{"line":42,"column":50},"end":{"line":49,"column":5}},"line":42},"7":{"name":"(anonymous_7)","decl":{"start":{"line":50,"column":4},"end":{"line":50,"column":5}},"loc":{"start":{"line":50,"column":33},"end":{"line":53,"column":5}},"line":50},"8":{"name":"(anonymous_8)","decl":{"start":{"line":54,"column":4},"end":{"line":54,"column":5}},"loc":{"start":{"line":54,"column":41},"end":{"line":61,"column":5}},"line":54},"9":{"name":"(anonymous_9)","decl":{"start":{"line":62,"column":4},"end":{"line":62,"column":5}},"loc":{"start":{"line":62,"column":40},"end":{"line":64,"column":5}},"line":62},"10":{"name":"(anonymous_10)","decl":{"start":{"line":65,"column":4},"end":{"line":65,"column":5}},"loc":{"start":{"line":65,"column":42},"end":{"line":75,"column":5}},"line":65},"11":{"name":"(anonymous_11)","decl":{"start":{"line":76,"column":4},"end":{"line":76,"column":5}},"loc":{"start":{"line":76,"column":47},"end":{"line":89,"column":5}},"line":76},"12":{"name":"(anonymous_12)","decl":{"start":{"line":90,"column":4},"end":{"line":90,"column":5}},"loc":{"start":{"line":90,"column":35},"end":{"line":102,"column":5}},"line":90},"13":{"name":"(anonymous_13)","decl":{"start":{"line":103,"column":4},"end":{"line":103,"column":5}},"loc":{"start":{"line":103,"column":29},"end":{"line":112,"column":5}},"line":103}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":12,"column":8},"end":{"line":14,"column":9}},"type":"if","locations":[{"start":{"line":12,"column":8},"end":{"line":14,"column":9}},{"start":{"line":12,"column":8},"end":{"line":14,"column":9}}],"line":12},"4":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":100}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":55}},{"start":{"line":12,"column":59},"end":{"line":12,"column":100}}],"line":12},"5":{"loc":{"start":{"line":24,"column":8},"end":{"line":25,"column":63}},"type":"if","locations":[{"start":{"line":24,"column":8},"end":{"line":25,"column":63}},{"start":{"line":24,"column":8},"end":{"line":25,"column":63}}],"line":24},"6":{"loc":{"start":{"line":55,"column":8},"end":{"line":56,"column":19}},"type":"if","locations":[{"start":{"line":55,"column":8},"end":{"line":56,"column":19}},{"start":{"line":55,"column":8},"end":{"line":56,"column":19}}],"line":55},"7":{"loc":{"start":{"line":57,"column":8},"end":{"line":59,"column":9}},"type":"if","locations":[{"start":{"line":57,"column":8},"end":{"line":59,"column":9}},{"start":{"line":57,"column":8},"end":{"line":59,"column":9}}],"line":57},"8":{"loc":{"start":{"line":66,"column":8},"end":{"line":67,"column":19}},"type":"if","locations":[{"start":{"line":66,"column":8},"end":{"line":67,"column":19}},{"start":{"line":66,"column":8},"end":{"line":67,"column":19}}],"line":66},"9":{"loc":{"start":{"line":70,"column":12},"end":{"line":71,"column":86}},"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":71,"column":86}},{"start":{"line":70,"column":12},"end":{"line":71,"column":86}}],"line":70},"10":{"loc":{"start":{"line":70,"column":16},"end":{"line":70,"column":29}},"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":19}},{"start":{"line":70,"column":23},"end":{"line":70,"column":29}}],"line":70},"11":{"loc":{"start":{"line":72,"column":12},"end":{"line":73,"column":86}},"type":"if","locations":[{"start":{"line":72,"column":12},"end":{"line":73,"column":86}},{"start":{"line":72,"column":12},"end":{"line":73,"column":86}}],"line":72},"12":{"loc":{"start":{"line":72,"column":16},"end":{"line":72,"column":29}},"type":"binary-expr","locations":[{"start":{"line":72,"column":16},"end":{"line":72,"column":21}},{"start":{"line":72,"column":25},"end":{"line":72,"column":29}}],"line":72},"13":{"loc":{"start":{"line":78,"column":8},"end":{"line":79,"column":19}},"type":"if","locations":[{"start":{"line":78,"column":8},"end":{"line":79,"column":19}},{"start":{"line":78,"column":8},"end":{"line":79,"column":19}}],"line":78},"14":{"loc":{"start":{"line":83,"column":12},"end":{"line":84,"column":73}},"type":"if","locations":[{"start":{"line":83,"column":12},"end":{"line":84,"column":73}},{"start":{"line":83,"column":12},"end":{"line":84,"column":73}}],"line":83},"15":{"loc":{"start":{"line":91,"column":8},"end":{"line":92,"column":22}},"type":"if","locations":[{"start":{"line":91,"column":8},"end":{"line":92,"column":22}},{"start":{"line":91,"column":8},"end":{"line":92,"column":22}}],"line":91},"16":{"loc":{"start":{"line":97,"column":12},"end":{"line":98,"column":73}},"type":"if","locations":[{"start":{"line":97,"column":12},"end":{"line":98,"column":73}},{"start":{"line":97,"column":12},"end":{"line":98,"column":73}}],"line":97}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":1,"10":1,"11":1,"12":11,"13":11,"14":8,"15":6,"16":4,"17":3,"18":4,"19":1,"20":1,"21":7,"22":7,"23":4,"24":3,"25":2,"26":2,"27":9,"28":9,"29":6,"30":5,"31":5,"32":5,"33":1,"34":1,"35":27,"36":1,"37":26,"38":3,"39":23,"40":8,"41":31,"42":1,"43":30,"44":49,"45":4,"46":45,"47":4,"48":11,"49":11,"50":2,"51":9,"52":12,"53":12,"54":2,"55":10,"56":7,"57":10,"58":0,"59":10,"60":10,"61":25,"62":25,"63":2,"64":23,"65":8,"66":5,"67":5,"68":0,"69":5,"70":1},"f":{"0":1,"1":1,"2":11,"3":1,"4":7,"5":2,"6":9,"7":1,"8":27,"9":8,"10":31,"11":11,"12":10,"13":5},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1],"3":[0,1],"4":[1,1],"5":[3,1],"6":[1,26],"7":[3,23],"8":[1,30],"9":[4,45],"10":[49,45],"11":[4,41],"12":[45,45],"13":[2,9],"14":[2,10],"15":[0,10],"16":[2,23]},"inputSourceMap":{"version":3,"file":"/home/illya/work/maester-client/src/ObjectStorageWrapper.ts","sources":["/home/illya/work/maester-client/src/ObjectStorageWrapper.ts"],"names":[],"mappings":"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","sourcesContent":["import ObjectStorage from './ObjectStorage';\n\nexport const MAESTER_MAX_SUPPORTED_COUNT_OF_QUERY_HEADERS = 5;\nexport const TTL_HEADER = 'x-eio-ttl';\n\nexport interface Scope {\n  logger: object;\n}\n\nexport interface Header {\n  key: string,\n  value: string\n}\nexport interface KeyIndexer {\n  [key: string]: string\n}\n\nexport class ObjectStorageWrapper {\n  logger: any;\n\n  token: string;\n\n  url: string;\n\n  objectStorage: any;\n\n  constructor(context: Scope) {\n    this.logger = context.logger;\n    if (!process.env.ELASTICIO_OBJECT_STORAGE_TOKEN || !process.env.ELASTICIO_OBJECT_STORAGE_URI) {\n      throw new Error('Can not find storage token or storage uri values... Check environment variables');\n    }\n    this.token = process.env.ELASTICIO_OBJECT_STORAGE_TOKEN;\n    this.url = process.env.ELASTICIO_OBJECT_STORAGE_URI;\n    this.objectStorage = new ObjectStorage({ uri: this.url, jwtSecret: this.token });\n  }\n\n  async createObject(data: object, queryHeaders?: Header[], metaHeaders?: Header[], ttl?: number) {\n    this.logger.debug('Going to create an object...');\n    ObjectStorageWrapper.validateQueryHeaders(queryHeaders);\n    ObjectStorageWrapper.validateMetaHeaders(metaHeaders);\n\n    const resultHeaders: KeyIndexer = {\n      ...ObjectStorageWrapper.getPostHeaders(queryHeaders, 'query'),\n      ...ObjectStorageWrapper.getPostHeaders(metaHeaders, 'meta'),\n    };\n    if (ttl) resultHeaders[TTL_HEADER] = ttl.toString();\n    return this.objectStorage.postObject(data, resultHeaders);\n  }\n\n  async deleteObjectById(id: string) {\n    this.logger.debug(`Going to delete an object with id ${id}...`);\n    return this.objectStorage.deleteOne(id);\n  }\n\n  async deleteObjectsByQueryParameters(headers: Header[]) {\n    this.logger.debug('Going to delete objects by query parameters...');\n    ObjectStorageWrapper.validateQueryHeaders(headers);\n    const resultParams = ObjectStorageWrapper.getQueryParams(headers);\n    return this.objectStorage.deleteMany(resultParams);\n  }\n\n  async lookupObjectById(id: string) {\n    this.logger.debug(`Going to find an object by id ${id}...`);\n    return this.objectStorage.getById(id);\n  }\n\n  async lookupObjectsByQueryParameters(headers: Header[]) {\n    this.logger.debug('Going to find an object by query parameters');\n    ObjectStorageWrapper.validateQueryHeaders(headers);\n    const resultParams = ObjectStorageWrapper.getQueryParams(headers);\n    const result = await this.objectStorage.getAllByParams(resultParams);\n    this.logger.debug(`Trying to parse the response to JSON: ${JSON.stringify(result)}`);\n    return ObjectStorageWrapper.parseJson(result);\n  }\n\n  async updateObject(id: string, data: object) {\n    this.logger.debug(`Going to update and object with id ${id}...`);\n    return this.objectStorage.updateOne(id, data);\n  }\n\n  private static validateQueryHeaders(headers: Header[]) {\n    if (!headers) return;\n\n    if (headers.length > MAESTER_MAX_SUPPORTED_COUNT_OF_QUERY_HEADERS) {\n      throw new Error(`maximum available amount of headers is ${MAESTER_MAX_SUPPORTED_COUNT_OF_QUERY_HEADERS}`);\n    }\n\n    ObjectStorageWrapper.validateHeadersFormat(headers);\n  }\n\n  private static validateMetaHeaders(headers: Header[]) {\n    ObjectStorageWrapper.validateHeadersFormat(headers);\n  }\n\n  private static validateHeadersFormat(headers: Header[]) {\n    if (!headers) return;\n\n    // eslint-disable-next-line no-restricted-syntax\n    for (const { key, value } of headers) {\n      if (key && !value) throw new Error('header \"value\" is mandatory if header \"key\" passed');\n      if (value && !key) throw new Error('header \"key\" is mandatory if header \"value\" passed');\n    }\n  }\n\n  private static getPostHeaders(headers: Header[], headerName: string): any {\n    const resultHeaders: KeyIndexer = {};\n    if (!headers) return;\n\n    // eslint-disable-next-line no-restricted-syntax\n    for (const { key, value } of headers) {\n      const header = `x-${headerName}-${key}`;\n      if (resultHeaders.hasOwnProperty(header)) throw new Error(`header key \"${key}\" was already added`);\n      resultHeaders[header] = value;\n    }\n\n    // eslint-disable-next-line consistent-return\n    return resultHeaders;\n  }\n\n  private static getQueryParams(headers: Header[]) {\n    if (!headers) return {};\n    const resultParams: KeyIndexer = {};\n\n    // eslint-disable-next-line no-restricted-syntax\n    for (const { key, value } of headers) {\n      const queryKey: string = `query[${key}]`;\n      if (resultParams.hasOwnProperty(queryKey)) throw new Error(`header key \"${key}\" was already added`);\n      resultParams[queryKey] = value;\n    }\n\n    return resultParams;\n  }\n\n  private static parseJson(source: string) {\n    let parsedJson;\n    try {\n      parsedJson = JSON.parse(source);\n    } catch (parseError) {\n      throw new Error('Could not parse Maester object as it is not a JSON object');\n    }\n    return parsedJson;\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f49f75bcd9582ab75be67661be123e8f8c499d81","contentHash":"9cedd52c5126d9e072d5614178044a6a73ddde3bdc8518438dba738a73c94431"},"/home/illya/work/maester-client/spec/StorageClient.spec.ts":{"path":"/home/illya/work/maester-client/spec/StorageClient.spec.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":7,"column":15},"end":{"line":7,"column":47}},"4":{"start":{"line":8,"column":16},"end":{"line":8,"column":49}},"5":{"start":{"line":9,"column":15},"end":{"line":9,"column":30}},"6":{"start":{"line":10,"column":16},"end":{"line":10,"column":32}},"7":{"start":{"line":11,"column":17},"end":{"line":11,"column":34}},"8":{"start":{"line":12,"column":21},"end":{"line":12,"column":59}},"9":{"start":{"line":13,"column":24},"end":{"line":13,"column":72}},"10":{"start":{"line":14,"column":17},"end":{"line":14,"column":58}},"11":{"start":{"line":15,"column":18},"end":{"line":15,"column":38}},"12":{"start":{"line":16,"column":0},"end":{"line":125,"column":3}},"13":{"start":{"line":17,"column":19},"end":{"line":20,"column":5}},"14":{"start":{"line":21,"column":17},"end":{"line":21,"column":33}},"15":{"start":{"line":22,"column":25},"end":{"line":29,"column":5}},"16":{"start":{"line":32,"column":4},"end":{"line":40,"column":7}},"17":{"start":{"line":33,"column":8},"end":{"line":33,"column":48}},"18":{"start":{"line":34,"column":8},"end":{"line":39,"column":10}},"19":{"start":{"line":35,"column":27},"end":{"line":35,"column":50}},"20":{"start":{"line":36,"column":12},"end":{"line":36,"column":46}},"21":{"start":{"line":37,"column":12},"end":{"line":37,"column":30}},"22":{"start":{"line":38,"column":12},"end":{"line":38,"column":26}},"23":{"start":{"line":41,"column":4},"end":{"line":43,"column":7}},"24":{"start":{"line":42,"column":8},"end":{"line":42,"column":24}},"25":{"start":{"line":44,"column":4},"end":{"line":67,"column":7}},"26":{"start":{"line":45,"column":20},"end":{"line":45,"column":56}},"27":{"start":{"line":46,"column":30},"end":{"line":46,"column":65}},"28":{"start":{"line":47,"column":35},"end":{"line":55,"column":50}},"29":{"start":{"line":57,"column":8},"end":{"line":62,"column":9}},"30":{"start":{"line":58,"column":12},"end":{"line":58,"column":52}},"31":{"start":{"line":61,"column":12},"end":{"line":61,"column":20}},"32":{"start":{"line":63,"column":8},"end":{"line":63,"column":62}},"33":{"start":{"line":64,"column":8},"end":{"line":64,"column":57}},"34":{"start":{"line":65,"column":8},"end":{"line":65,"column":75}},"35":{"start":{"line":66,"column":8},"end":{"line":66,"column":52}},"36":{"start":{"line":68,"column":4},"end":{"line":84,"column":7}},"37":{"start":{"line":69,"column":30},"end":{"line":69,"column":65}},"38":{"start":{"line":70,"column":35},"end":{"line":78,"column":55}},"39":{"start":{"line":79,"column":25},"end":{"line":79,"column":64}},"40":{"start":{"line":80,"column":8},"end":{"line":80,"column":62}},"41":{"start":{"line":81,"column":8},"end":{"line":81,"column":73}},"42":{"start":{"line":82,"column":27},"end":{"line":82,"column":80}},"43":{"start":{"line":83,"column":8},"end":{"line":83,"column":57}},"44":{"start":{"line":85,"column":4},"end":{"line":99,"column":7}},"45":{"start":{"line":86,"column":30},"end":{"line":86,"column":65}},"46":{"start":{"line":87,"column":35},"end":{"line":95,"column":37}},"47":{"start":{"line":96,"column":25},"end":{"line":96,"column":71}},"48":{"start":{"line":97,"column":8},"end":{"line":97,"column":68}},"49":{"start":{"line":98,"column":8},"end":{"line":98,"column":62}},"50":{"start":{"line":100,"column":4},"end":{"line":111,"column":7}},"51":{"start":{"line":101,"column":30},"end":{"line":101,"column":65}},"52":{"start":{"line":102,"column":35},"end":{"line":106,"column":37}},"53":{"start":{"line":107,"column":25},"end":{"line":107,"column":71}},"54":{"start":{"line":108,"column":8},"end":{"line":108,"column":62}},"55":{"start":{"line":109,"column":8},"end":{"line":109,"column":68}},"56":{"start":{"line":110,"column":8},"end":{"line":110,"column":62}},"57":{"start":{"line":112,"column":4},"end":{"line":124,"column":7}},"58":{"start":{"line":113,"column":30},"end":{"line":113,"column":65}},"59":{"start":{"line":114,"column":35},"end":{"line":118,"column":55}},"60":{"start":{"line":119,"column":25},"end":{"line":119,"column":60}},"61":{"start":{"line":120,"column":8},"end":{"line":120,"column":62}},"62":{"start":{"line":121,"column":8},"end":{"line":121,"column":73}},"63":{"start":{"line":122,"column":27},"end":{"line":122,"column":80}},"64":{"start":{"line":123,"column":8},"end":{"line":123,"column":57}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":16,"column":35},"end":{"line":16,"column":36}},"loc":{"start":{"line":16,"column":41},"end":{"line":125,"column":1}},"line":16},"2":{"name":"(anonymous_2)","decl":{"start":{"line":32,"column":23},"end":{"line":32,"column":24}},"loc":{"start":{"line":32,"column":35},"end":{"line":40,"column":5}},"line":32},"3":{"name":"(anonymous_3)","decl":{"start":{"line":34,"column":20},"end":{"line":34,"column":21}},"loc":{"start":{"line":34,"column":26},"end":{"line":39,"column":9}},"line":34},"4":{"name":"(anonymous_4)","decl":{"start":{"line":41,"column":22},"end":{"line":41,"column":23}},"loc":{"start":{"line":41,"column":28},"end":{"line":43,"column":5}},"line":41},"5":{"name":"(anonymous_5)","decl":{"start":{"line":44,"column":46},"end":{"line":44,"column":47}},"loc":{"start":{"line":44,"column":58},"end":{"line":67,"column":5}},"line":44},"6":{"name":"(anonymous_6)","decl":{"start":{"line":68,"column":61},"end":{"line":68,"column":62}},"loc":{"start":{"line":68,"column":73},"end":{"line":84,"column":5}},"line":68},"7":{"name":"(anonymous_7)","decl":{"start":{"line":85,"column":62},"end":{"line":85,"column":63}},"loc":{"start":{"line":85,"column":74},"end":{"line":99,"column":5}},"line":85},"8":{"name":"(anonymous_8)","decl":{"start":{"line":100,"column":49},"end":{"line":100,"column":50}},"loc":{"start":{"line":100,"column":61},"end":{"line":111,"column":5}},"line":100},"9":{"name":"(anonymous_9)","decl":{"start":{"line":112,"column":49},"end":{"line":112,"column":50}},"loc":{"start":{"line":112,"column":61},"end":{"line":124,"column":5}},"line":112}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":5,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":5,"18":5,"19":4,"20":4,"21":4,"22":4,"23":1,"24":5,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"59":1,"60":1,"61":1,"62":1,"63":1,"64":1},"f":{"0":5,"1":1,"2":5,"3":4,"4":5,"5":1,"6":1,"7":1,"8":1,"9":1},"b":{"0":[1,1,1],"1":[2,3],"2":[5,5]},"inputSourceMap":{"version":3,"file":"/home/illya/work/maester-client/spec/StorageClient.spec.ts","sources":["/home/illya/work/maester-client/spec/StorageClient.spec.ts"],"names":[],"mappings":";;;;;AAAA,0CAA0C;AAC1C,gDAAwB;AACxB,kDAA8C;AAC9C,+BAA8B;AAC9B,iCAEe;AACf,mCAAkC;AAClC,4DAAmC;AACnC,yEAAiD;AACjD,2DAAoC;AACpC,uCAA2C;AAE3C,gBAAQ,CAAC,gBAAgB,EAAE,GAAG,EAAE;IAC9B,MAAM,MAAM,GAAG;QACb,GAAG,EAAE,mBAAmB;QACxB,SAAS,EAAE,KAAK;KACjB,CAAC;IAEF,MAAM,IAAI,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;IAE9B,MAAM,YAAY,GAAG;QACnB,aAAa,EAAE,oBAAoB;QACnC,WAAW,EAAE,kBAAkB;QAC/B,SAAS,EAAE,gBAAgB;QAC3B,GAAG,EAAE,cAAc;QACnB,QAAQ,EAAE,QAAQ;QAClB,QAAQ,EAAE,mBAAmB;KAC9B,CAAC;IAEF,IAAI,SAAyB,CAAC;IAE9B,IAAI,KAAmB,CAAC;IACxB,kBAAU,CAAC,KAAK,IAAI,EAAE;QACpB,KAAK,GAAG,eAAO,CAAC,aAAa,EAAE,CAAC;QAEhC,SAAS,GAAG,GAAG,EAAE;YACf,MAAM,MAAM,GAAG,IAAI,iBAAQ,EAAE,CAAC;YAC9B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;YAClC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAClB,OAAO,MAAM,CAAC;QAChB,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC;IACH,iBAAS,CAAC,GAAG,EAAE;QACb,KAAK,CAAC,OAAO,EAAE,CAAC;IAClB,CAAC,CAAC,CAAC;IAEH,UAAE,CAAC,6BAA6B,EAAE,KAAK,IAAI,EAAE;QAC3C,MAAM,GAAG,GAAG,KAAK,CAAC,IAAI,CAAC,gBAAO,EAAE,MAAM,CAAC,CAAC;QACxC,MAAM,aAAa,GAAG,IAAI,uBAAa,CAAC,MAAM,CAAC,CAAC;QAEhD,MAAM,kBAAkB,GAAG,cAAI,CAAC,MAAM,CAAC,GAAG,CAAC;YAC3C,uCAAuC;aACpC,WAAW,CAAC,eAAe,EAAE,UAAU,MAAM,CAAC,SAAS,EAAE,CAAC;aAC1D,GAAG,CAAC,YAAY,CAAC;aACjB,cAAc,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE,CAAC;aACrC,GAAG,CAAC,YAAY,CAAC;aACjB,KAAK,CAAC,GAAG,CAAC;aACV,GAAG,CAAC,YAAY,CAAC;aACjB,cAAc,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE,CAAC,CAAC;QAEzC,IAAI,GAAG,CAAC;QACR,IAAI;YACF,MAAM,aAAa,CAAC,UAAU,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;SACzC;QAAC,OAAO,CAAC,EAAE;YACV,GAAG,GAAG,CAAC,CAAC;SACT;QACD,aAAM,CAAC,kBAAkB,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC;QAC/C,aAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;QAC1C,aAAM,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAC5D,aAAM,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IACvC,CAAC,CAAC,CAAC;IAEH,UAAE,CAAC,4CAA4C,EAAE,KAAK,IAAI,EAAE;QAC1D,MAAM,aAAa,GAAG,IAAI,uBAAa,CAAC,MAAM,CAAC,CAAC;QAEhD,MAAM,kBAAkB,GAAG,cAAI,CAAC,MAAM,CAAC,GAAG,CAAC;YAC3C,uCAAuC;aACpC,WAAW,CAAC,eAAe,EAAE,UAAU,MAAM,CAAC,SAAS,EAAE,CAAC;aAC1D,GAAG,CAAC,YAAY,CAAC;aACjB,KAAK,CAAC,GAAG,CAAC;aACV,GAAG,CAAC,YAAY,CAAC;aACjB,cAAc,CAAC,EAAE,IAAI,EAAE,YAAY,EAAE,CAAC;aACtC,GAAG,CAAC,YAAY,CAAC;aACjB,KAAK,CAAC,GAAG,EAAE,wBAAc,CAAC,IAAI,CAAC,CAAC,CAAC;QAEpC,MAAM,QAAQ,GAAG,MAAM,aAAa,CAAC,UAAU,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;QAEzD,aAAM,CAAC,kBAAkB,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC;QAC/C,aAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,UAAU,CAAC,iBAAQ,CAAC,CAAC;QACjD,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,oBAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;QAC9D,aAAM,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IAC5C,CAAC,CAAC,CAAC;IAEH,UAAE,CAAC,6CAA6C,EAAE,KAAK,IAAI,EAAE;QAC3D,MAAM,aAAa,GAAG,IAAI,uBAAa,CAAC,MAAM,CAAC,CAAC;QAEhD,MAAM,kBAAkB,GAAG,cAAI,CAAC,MAAM,CAAC,GAAG,CAAC;YAC3C,uCAAuC;aACpC,WAAW,CAAC,eAAe,EAAE,UAAU,MAAM,CAAC,SAAS,EAAE,CAAC;aAC1D,IAAI,CAAC,UAAU,CAAC;aAChB,cAAc,CAAC,EAAE,IAAI,EAAE,cAAc,EAAE,CAAC;aACxC,IAAI,CAAC,UAAU,CAAC;aAChB,KAAK,CAAC,GAAG,CAAC;aACV,IAAI,CAAC,UAAU,CAAC;aAChB,KAAK,CAAC,GAAG,EAAE,YAAY,CAAC,CAAC;QAE5B,MAAM,QAAQ,GAAG,MAAM,aAAa,CAAC,WAAW,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;QAChE,aAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;QACrD,aAAM,CAAC,kBAAkB,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC;IACjD,CAAC,CAAC,CAAC;IAEH,UAAE,CAAC,gCAAgC,EAAE,KAAK,IAAI,EAAE;QAC9C,MAAM,aAAa,GAAG,IAAI,uBAAa,CAAC,MAAM,CAAC,CAAC;QAEhD,MAAM,kBAAkB,GAAG,cAAI,CAAC,MAAM,CAAC,GAAG,CAAC;YAC3C,uCAAuC;aACpC,WAAW,CAAC,eAAe,EAAE,UAAU,MAAM,CAAC,SAAS,EAAE,CAAC;aAC1D,IAAI,CAAC,UAAU,CAAC;aAChB,KAAK,CAAC,GAAG,EAAE,YAAY,CAAC,CAAC;QAE5B,MAAM,QAAQ,GAAG,MAAM,aAAa,CAAC,WAAW,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;QAChE,aAAM,CAAC,kBAAkB,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC;QAC/C,aAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;QACrD,aAAM,CAAC,kBAAkB,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC;IACjD,CAAC,CAAC,CAAC;IAEH,UAAE,CAAC,gCAAgC,EAAE,KAAK,IAAI,EAAE;QAC9C,MAAM,aAAa,GAAG,IAAI,uBAAa,CAAC,MAAM,CAAC,CAAC;QAEhD,MAAM,kBAAkB,GAAG,cAAI,CAAC,MAAM,CAAC,GAAG,CAAC;YAC3C,uCAAuC;aACpC,WAAW,CAAC,eAAe,EAAE,UAAU,MAAM,CAAC,SAAS,EAAE,CAAC;aAC1D,GAAG,CAAC,YAAY,CAAC;aACjB,KAAK,CAAC,GAAG,EAAE,wBAAc,CAAC,IAAI,CAAC,CAAC,CAAC;QAEpC,MAAM,QAAQ,GAAG,MAAM,aAAa,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;QACrD,aAAM,CAAC,kBAAkB,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC;QAC/C,aAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,UAAU,CAAC,iBAAQ,CAAC,CAAC;QACjD,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,oBAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;QAC9D,aAAM,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IAC5C,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["/* eslint-disable no-unused-expressions */\nimport nock from 'nock';\nimport sinonjs, { SinonSandbox } from 'sinon';\nimport { expect } from 'chai';\nimport {\n  describe, beforeEach, afterEach, it,\n} from 'mocha';\nimport { Readable } from 'stream';\nimport getStream from 'get-stream';\nimport StorageClient from '../src/StorageClient';\nimport logging from '../src/logger';\nimport { streamResponse } from './helpers';\n\ndescribe('Storage Client', () => {\n  const config = {\n    uri: 'https://ma.es.ter',\n    jwtSecret: 'jwt',\n  };\n\n  const data = { test: 'test' };\n\n  const responseData = {\n    contentLength: 'meta.contentLength',\n    contentType: 'meta.contentType',\n    createdAt: 'meta.createdAt',\n    md5: 'meta.md5Hash',\n    objectId: 'obj.id',\n    metadata: 'meta.userMetadata',\n  };\n\n  let putStream: () => Readable;\n\n  let sinon: SinonSandbox;\n  beforeEach(async () => {\n    sinon = sinonjs.createSandbox();\n\n    putStream = () => {\n      const stream = new Readable();\n      stream.push(JSON.stringify(data));\n      stream.push(null);\n      return stream;\n    };\n  });\n  afterEach(() => {\n    sinon.restore();\n  });\n\n  it('should fail after 3 retries', async () => {\n    const log = sinon.stub(logging, 'warn');\n    const storageClient = new StorageClient(config);\n\n    const storageClientCalls = nock(config.uri)\n    // @ts-ignore: Nock .d.ts are outdated.\n      .matchHeader('authorization', `Bearer ${config.jwtSecret}`)\n      .get('/objects/1')\n      .replyWithError({ code: 'ETIMEDOUT' })\n      .get('/objects/1')\n      .reply(404)\n      .get('/objects/1')\n      .replyWithError({ code: 'ENOTFOUND' });\n\n    let err;\n    try {\n      await storageClient.readStream('1', {});\n    } catch (e) {\n      err = e;\n    }\n    expect(storageClientCalls.isDone()).to.be.true;\n    expect(err.code).to.be.equal('ENOTFOUND');\n    expect(log.getCall(1).args[1].toString()).to.include('404');\n    expect(log.callCount).to.be.equal(2);\n  });\n\n  it('should retry get request 3 times on errors', async () => {\n    const storageClient = new StorageClient(config);\n\n    const storageClientCalls = nock(config.uri)\n    // @ts-ignore: Nock .d.ts are outdated.\n      .matchHeader('authorization', `Bearer ${config.jwtSecret}`)\n      .get('/objects/1')\n      .reply(500)\n      .get('/objects/1')\n      .replyWithError({ code: 'ECONNRESET' })\n      .get('/objects/1')\n      .reply(200, streamResponse(data));\n\n    const response = await storageClient.readStream('1', {});\n\n    expect(storageClientCalls.isDone()).to.be.true;\n    expect(response.data).to.be.instanceOf(Readable);\n    const resultData = JSON.parse(await getStream(response.data));\n    expect(resultData).to.be.deep.equal(data);\n  });\n\n  it('should retry post request 3 times on errors', async () => {\n    const storageClient = new StorageClient(config);\n\n    const storageClientCalls = nock(config.uri)\n    // @ts-ignore: Nock .d.ts are outdated.\n      .matchHeader('authorization', `Bearer ${config.jwtSecret}`)\n      .post('/objects')\n      .replyWithError({ code: 'ECONNREFUSED' })\n      .post('/objects')\n      .reply(400)\n      .post('/objects')\n      .reply(200, responseData);\n\n    const response = await storageClient.writeStream(putStream, {});\n    expect(response.data).to.be.deep.equal(responseData);\n    expect(storageClientCalls.isDone()).to.be.true;\n  });\n\n  it('should accept jwt token on add', async () => {\n    const storageClient = new StorageClient(config);\n\n    const storageClientCalls = nock(config.uri)\n    // @ts-ignore: Nock .d.ts are outdated.\n      .matchHeader('authorization', `Bearer ${config.jwtSecret}`)\n      .post('/objects')\n      .reply(200, responseData);\n\n    const response = await storageClient.writeStream(putStream, {});\n    expect(storageClientCalls.isDone()).to.be.true;\n    expect(response.data).to.be.deep.equal(responseData);\n    expect(storageClientCalls.isDone()).to.be.true;\n  });\n\n  it('should accept jwt token on get', async () => {\n    const storageClient = new StorageClient(config);\n\n    const storageClientCalls = nock(config.uri)\n    // @ts-ignore: Nock .d.ts are outdated.\n      .matchHeader('authorization', `Bearer ${config.jwtSecret}`)\n      .get('/objects/1')\n      .reply(200, streamResponse(data));\n\n    const response = await storageClient.readStream('1');\n    expect(storageClientCalls.isDone()).to.be.true;\n    expect(response.data).to.be.instanceOf(Readable);\n    const resultData = JSON.parse(await getStream(response.data));\n    expect(resultData).to.be.deep.equal(data);\n  });\n});\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"0501c45425884bf9f0ab83a941068658c0dce94f","contentHash":"f9bfe09dc2addd1dd35f942024c102ed23fa99eb3c057ffa649c493f085fafd5"}}